{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/component/company/add/add/add.component.ts","./src/app/component/company/add/add/add.component.html","./src/app/component/company/edit/edit.component.ts","./src/app/component/company/edit/edit.component.html","./src/app/component/company/list/list.component.ts","./src/app/component/company/list/list.component.html","./src/app/component/dash/dashboad/dashboad.component.ts","./src/app/component/dash/dashboad/dashboad.component.html","./src/app/component/footer/footer.component.ts","./src/app/component/footer/footer.component.html","./src/app/component/importstock/importstock.component.ts","./src/app/component/importstock/importstock.component.html","./src/app/component/ipoplan/detail/detail.component.ts","./src/app/component/ipoplan/detail/detail.component.html","./src/app/component/ipoplan/ipoplan.component.ts","./src/app/component/ipoplan/ipoplan.component.html","./src/app/component/login/login.component.ts","./src/app/component/login/login.component.html","./src/app/component/navbar/navbar.component.ts","./src/app/component/navbar/navbar.component.html","./src/app/component/strockprice/strockprice.component.ts","./src/app/component/strockprice/strockprice.component.html","./src/app/component/user/signup/signup.component.ts","./src/app/component/user/signup/signup.component.html","./src/app/component/user/user-password/user-password.component.ts","./src/app/component/user/user-password/user-password.component.html","./src/app/component/user/user-profile/user-profile.component.ts","./src/app/component/user/user-profile/user-profile.component.html","./src/app/component/user/user.component.ts","./src/app/component/user/user.component.html","./src/app/guard/login.guard.ts","./src/app/pipe/money.pipe.ts","./src/app/service/company.service.ts","./src/app/service/dictsinfo.service.ts","./src/app/service/ipoplan.service.ts","./src/app/service/unit.ts","./src/app/service/user.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './component/login/login.component';\nimport { ListComponent } from './component/company/list/list.component';\nimport { EditComponent } from './component/company/edit/edit.component';\nimport { AddComponent } from './component/company/add/add/add.component';\nimport { UserComponent } from './component/user/user.component';\nimport { UserProfileComponent } from './component/user/user-profile/user-profile.component';\nimport { ImportstockComponent } from './component/importstock/importstock.component';\nimport { UserPasswordComponent } from './component/user/user-password/user-password.component';\nimport { IpoplanComponent } from './component/ipoplan/ipoplan.component';\nimport { DetailComponent } from './component/ipoplan/detail/detail.component';\nimport { StrockpriceComponent } from './component/strockprice/strockprice.component';\nimport { LoginGuard } from './guard/login.guard';\nimport { DashboadComponent } from './component/dash/dashboad/dashboad.component';\nimport { SignupComponent} from './component//user/signup/signup.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent},\n  { path: 'dashboad', component: DashboadComponent, canActivate: [LoginGuard]},\n  { path: 'addcompany', component: AddComponent, canActivate: [LoginGuard]},\n  { path: 'companyedit/:id', component: EditComponent, canActivate: [LoginGuard]},\n  { path: 'companylist', component: ListComponent, canActivate: [LoginGuard]},\n  { path: 'userlist', component: UserComponent, canActivate: [LoginGuard]},\n  { path: 'signup', component: SignupComponent},\n  { path: 'userprofile/:id', component: UserProfileComponent, canActivate: [LoginGuard]},\n  { path: 'changepwd/:id', component: UserPasswordComponent, canActivate: [LoginGuard]},\n  { path: 'ipoplan', component: IpoplanComponent, canActivate: [LoginGuard]},\n  { path: 'ipodetail/:id', component: DetailComponent, canActivate: [LoginGuard]},\n  { path: 'importstock', component: ImportstockComponent, canActivate: [LoginGuard]},\n  { path: 'stockprice', component: StrockpriceComponent, canActivate: [LoginGuard]},\n  { path: 'companysearch:query', component: StrockpriceComponent, canActivate: [LoginGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","/*\n * @Author: your name\n * @Date: 2020-04-12 20:51:40\n * @LastEditTime: 2020-04-19 19:38:23\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\app.component.ts\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'fullstack-angular stock';\n}\n","<!--\n * @Author:\n * @Date: 2020-04-12 20:51:40\n * @LastEditTime: 2020-04-19 19:51:46\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\app.component.html\n -->\n<app-navbar></app-navbar>\n\n<div class=\"container div-main\">\n  <div class=\"row\">\n    <div class=\"offset-1 col-md-10\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n\n<app-footer></app-footer>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxEchartsModule} from 'ngx-echarts';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './component/user/user.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { NavbarComponent } from './component/navbar/navbar.component';\nimport { FooterComponent } from './component/footer/footer.component';\nimport { ListComponent } from './component/company/list/list.component';\nimport { EditComponent } from './component/company/edit/edit.component';\nimport { MoneyPipe } from './pipe/money.pipe';\nimport { UserProfileComponent } from './component/user/user-profile/user-profile.component';\nimport { ImportstockComponent } from './component/importstock/importstock.component';\nimport { UserPasswordComponent } from './component/user/user-password/user-password.component';\nimport { IpoplanComponent } from './component/ipoplan/ipoplan.component';\nimport { StrockpriceComponent } from './component/strockprice/strockprice.component';\nimport { DashboadComponent } from './component/dash/dashboad/dashboad.component';\nimport { AddComponent } from './component/company/add/add/add.component';\nimport { DetailComponent } from './component/ipoplan/detail/detail.component';\nimport { SignupComponent } from './component/user/signup/signup.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    LoginComponent,\n    NavbarComponent,\n    FooterComponent,\n    ListComponent,\n    EditComponent,\n    MoneyPipe,\n    UserProfileComponent,\n    ImportstockComponent,\n    UserPasswordComponent,\n    IpoplanComponent,\n    StrockpriceComponent,\n    DashboadComponent,\n    AddComponent,\n    DetailComponent,\n    SignupComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    HttpClientModule,\n    NgxEchartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { CompanyService } from '../../../../service/company.service';\nimport { DictsinfoService } from './../../../../service/dictsinfo.service';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\n\ninterface Alert {\n  type: string;\n  message: string;\n}\n\nconst ALERTS: Alert[] = [];\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\n\nexport class AddComponent implements OnInit {\n\n  alerts : Alert[];\n\n  @Input() searchname: any;\n  @Input() searchdate: any;\n\n  constructor(private routeInfo: ActivatedRoute, private router:Router, private companyservice: CompanyService, public dictsinfo: DictsinfoService) {\n    this.reset();\n  }\n\n  sexchange: any;\n  stockcodelist: any;\n  sectorslist: any;\n\n  ngOnInit(): void {\n    this.sexchange = this.dictsinfo.getStockExchange();\n    this.stockcodelist = this.dictsinfo.getMockStockCode();\n    this.sectorslist = this.dictsinfo.getMockSectorsList();\n  }\n\n  ngSaveComapny(value: any) {\n    if (this.validInput(value)) {\n      this.companyservice.setCompanyInfo(value).subscribe(\n        data => {\n          console.log(JSON.stringify(data));\n          const info: any = data;\n          if (200 === info.code) {\n              console.log('create company info successful,redirect page...');\n              this.router.navigate(['/companylist']);\n          } else {\n            console.log('create company info failing.');\n            this.alerts.push({type : 'danger', message: 'please contact administrators!'});\n          }\n        }\n      );\n    }\n  }\n\n  reset(): void {\n    this.alerts = Array.from(ALERTS);\n  }\n\n  close(alert: Alert): void {\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\n  }\n\n  validInput(value: any): boolean {\n    if (!value.companyname) {\n      this.alerts.push({type : 'danger', message: 'companyname required!'});\n      return false;\n    }\n\n    return true;\n  }\n}\n","<div class=\"col-sm-12\" ngController=\"myCompany\">\n  <h3>New Company</h3>\n  <p *ngFor=\"let alert of alerts\">\n    <ngb-alert [type]=\"alert.type\" (close)=\"close(alert)\">{{ alert.message }}</ngb-alert>\n  </p>\n  <form class=\"form-horizontal\" #myForm=\"ngForm\" (ngSubmit)=\"ngSaveComapny(myForm.value)\" novalidate>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Company Name</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" class=\"form-control\" ngModel id=\"companyname\" name=\"companyname\" placeholder=\"type company name\"  required>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Turnover</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"type turnover\" ngModel id=\"turnover\" name=\"turnover\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">CEO</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"type CEO\" ngModel id=\"ceo\" name=\"ceo\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Board of Dirctores</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"type board of dirctores\" ngModel id=\"bod\" name=\"bod\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Stock Exchange</label>\n          <div class=\"col-sm-8\">\n              <select class=\"form-control\" ngModel id=\"stockexchange\" name=\"stockexchange\">\n                <option *ngFor=\"let sechang of sexchange\" [value]=\"sechang\">{{sechang}}</option>\n              </select>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Sectors</label>\n          <div class=\"col-sm-8\">\n            <select class=\"form-control\" ngModel id=\"sectors\" name=\"sectors\">\n              <option *ngFor=\"let sector of sectorslist\" [value]=\"sector.id\">{{sector.sectorname}}</option>\n            </select>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Brief</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" ngModel id=\"brief\" class=\"form-control\" placeholder=\"type brief\" name=\"brief\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Stock Code</label>\n          <div class=\"col-sm-8\">\n              <select class=\"form-control\" ngModel id=\"stockcode\" name=\"stockcode\">\n                <option *ngFor=\"let code of stockcodelist\" [value]=\"code\">{{code}}</option>\n              </select>\n          </div>\n      </div>\n      <div class=\"btn-toolbar\" role=\"toolbar\">\n          <div class=\"col-sm-offset-4 col-sm-8\">\n              <div class=\"btn-group\">\n                  <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n                  <button type=\"reset\" class=\"btn btn-secondary\">Reset</button>\n              </div>\n          </div>\n      </div>\n  </form>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { CompanyService } from '../../../service/company.service';\nimport { DictsinfoService } from './../../../service/dictsinfo.service';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\n\ninterface Alert {\n  type: string;\n  message: string;\n}\n\nconst ALERTS: Alert[] = [];\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  alerts : Alert[];\n\n  @Input() searchname: any;\n  @Input() searchdate: any;\n\n  constructor(private routeInfo: ActivatedRoute, private router:Router, private companyservice: CompanyService, public dictsinfo: DictsinfoService) {\n    this.reset();\n  }\n\n  companyid: string;\n  sexchange: any;\n  stockcodelist: any;\n  sectorslist: any;\n  companys: any;\n\n  ngOnInit(): void {\n    this.sexchange = this.dictsinfo.getStockExchange();\n    this.stockcodelist = this.dictsinfo.getMockStockCode();\n    this.sectorslist = this.dictsinfo.getMockSectorsList();\n\n    this.companyid = this.routeInfo.snapshot.params['id'];\n\n    this.companys = this.companyservice.getComppanyInfo(this.companyid);\n  }\n\n  ngSaveComapny(value: any) {\n    if (this.validInput(value)) {\n      this.companyservice.setCompanyInfo(value).subscribe(\n        data => {\n          console.log(JSON.stringify(data));\n          const info: any = data;\n          if (200 === info.code) {\n              console.log('modify company info successful,redirect page...');\n              this.router.navigate(['/companylist']);\n          } else {\n            console.log('modify company info failing.');\n            this.alerts.push({type : 'danger', message: 'please contact administrators!'});\n          }\n        }\n      );\n    }\n  }\n\n  reset(): void {\n    this.alerts = Array.from(ALERTS);\n  }\n\n  close(alert: Alert): void {\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\n  }\n\n  validInput(value: any): boolean {\n    if (!value.companyname) {\n      this.alerts.push({type : 'danger', message: 'companyname required!'});\n      return false;\n    }\n\n    return true;\n  }\n}\n","<div class=\"col-sm-12\" ngController=\"myCompany\">\n  <h3>Company Edit</h3>\n  <p *ngFor=\"let alert of alerts\">\n    <ngb-alert [type]=\"alert.type\" (close)=\"close(alert)\">{{ alert.message }}</ngb-alert>\n  </p>\n  <form class=\"form-horizontal\" #myForm=\"ngForm\" (ngSubmit)=\"ngSaveComapny(myForm.value)\" novalidate>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Company Name</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" class=\"form-control\" ngModel id=\"companyname\" name=\"companyname\" placeholder=\"type company name\"  [(ngModel)]=\"companys.companyname\" required>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Turnover</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"type turnover\" ngModel id=\"turnover\" name=\"turnover\" [(ngModel)]=\"companys.turnover\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">CEO</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"type CEO\" ngModel id=\"ceo\" name=\"ceo\" [(ngModel)]=\"companys.ceo\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Board of Dirctores</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"type board of dirctores\" ngModel id=\"bod\" name=\"bod\" [(ngModel)]=\"companys.bod\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Stock Exchange</label>\n          <div class=\"col-sm-8\">\n              <select class=\"form-control\" ngModel id=\"stockexchange\" [(ngModel)]=\"companys.sexchange\" name=\"stockexchange\">\n                <option *ngFor=\"let sechang of sexchange\" [value]=\"sechang\" [selected]=\"sechang===companys.sexchange\">{{sechang}}</option>\n              </select>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Sectors</label>\n          <div class=\"col-sm-8\">\n            <select class=\"form-control\" ngModel id=\"sectors\" [(ngModel)]=\"companys.sector\" name=\"sectors\">\n              <option *ngFor=\"let sector of sectorslist\" [value]=\"sector.id\" [selected]=\"sector.id===companys.sector\">{{sector.sectorname}}</option>\n            </select>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Brief</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" ngModel id=\"brief\" class=\"form-control\" placeholder=\"type brief\" name=\"brief\" [(ngModel)]=\"companys.brief\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Stock Code</label>\n          <div class=\"col-sm-8\">\n              <select class=\"form-control\" ngModel id=\"stockcode\" [(ngModel)]=\"companys.stockcode\" name=\"stockcode\">\n                <option *ngFor=\"let code of stockcodelist\" [value]=\"code\" [selected]=\"code===companys.stockcode\">{{code}}</option>\n              </select>\n          </div>\n      </div>\n      <div class=\"btn-toolbar\" role=\"toolbar\">\n          <div class=\"col-sm-offset-4 col-sm-8\">\n              <div class=\"btn-group\">\n                  <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n                  <button type=\"reset\" class=\"btn btn-secondary\">Reset</button>\n              </div>\n          </div>\n      </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { CompanyService } from '../../../service/company.service';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\n\ninterface CompanyItem {\n  id: string;\n  name: string;\n  turnover: string;\n  ceo: string;\n  bod: string;\n  sexchange: string;\n  price: number;\n  sector: string;\n  brief: string;\n  stockcode: string;\n}\n\nconst COMPANY: CompanyItem[] = [{\n  id: '1',\n  name: 'company001',\n  turnover: 'test',\n  ceo: 'testceo',\n  bod: 'Board of Dirctors 001',\n  sexchange: 'BSE',\n  price: 23.9,\n  sector: 'sectors test1',\n  brief: 'brief write up tes 1',\n  stockcode: 'stock0001'\n}, {\n  id: '2',\n  name: 'company002',\n  turnover: 'test',\n  ceo: 'testceo',\n  bod: 'Board of Dirctors 002',\n  sexchange: 'NSE',\n  price: 23.9,\n  sector: 'sectors test2',\n  brief: 'brief write up tes 2',\n  stockcode: 'stock0002'\n}\n];\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n\n\n  constructor(private companyservice: CompanyService, private router:Router) { }\n\n  companys: CompanyItem[];\n\n  ngOnInit(): void {\n    this.companys = COMPANY;\n    // this.getAllCompanyList();\n  }\n\n  getAllCompanyList() {\n    this.companyservice.getAllCompanyList().subscribe(\n      data => {\n        console.log(JSON.stringify(data));\n        const info: any = data;\n        if (200 === info.code) {\n            console.log('company list successful,redirect page...');\n            this.router.navigate(['/companylist']);\n        } else {\n          console.log('modify company info failing.');\n        }\n      }\n    );\n\n  }\n\n  getSingleCompany(id: any) {\n    this.companyservice.getCompanyById(id).subscribe(\n      data => {\n        console.log(JSON.stringify(data));\n        const info: any = data;\n        if (200 === info.code) {\n            console.log('company single info successful,redirect page...');\n        } else {\n          console.log('modify company info failing.');\n        }\n      }\n    );\n  }\n\n\n}\n","<div class=\"container\" ngController=\"myCompany\">\n  <div class=\"row\">\n      <div class=\"col-sm-12\">\n          <h3>Company List</h3>\n          <table class=\"table table-striped table-bordered table-hover table-condensed\">\n              <thead>\n              <tr>\n                  <th>Company Name</th>\n                  <th>Stock Exchange</th>\n                  <th>Turnover</th>\n                  <th>Brief</th>\n                  <th>operation</th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr *ngFor=\"let company of companys\" >\n                  <td>{{ company.name }}</td>\n                  <td>{{ company.sexchange }}</td>\n                  <td>{{ company.turnover }}</td>\n                  <td>{{ company.brief }}</td>\n                  <td><a [routerLink]=\"['/companyedit', company.id]\">View Company</a></td>\n              </tr>\n              </tbody>\n          </table>\n\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-dashboad',\n  templateUrl: './dashboad.component.html',\n  styleUrls: ['./dashboad.component.css']\n})\nexport class DashboadComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  isRole: boolean;\n  loginuser: string;\n\n  ngOnInit(): void {\n    if (sessionStorage.getItem('token') === 'admin'){\n      this.isRole = true;\n    } else {\n      this.isRole = false;\n    }\n    this.loginuser = sessionStorage.getItem('loginuser');\n  }\n\n}\n","<div *ngIf=\"isRole\" class=\"container\">\n  <h3>Admin Dashboad</h3>\n  <div class=\"row\">\n      <div class=\"col-sm-8\">\n          <ul class=\"nav-item active\">\n              <li>\n                <a class=\"nav-link\" href [routerLink]=\"['/addcompany']\">Add Company</a>\n              </li>\n              <li>\n                <a class=\"nav-link\" href [routerLink]=\"['/companylist']\">Company List</a>\n              </li>\n              <li>\n                <a class=\"nav-link\" href [routerLink]=\"['/importstock']\">Import Data</a>\n              </li>\n              <li>\n                <a class=\"nav-link\" href [routerLink]=\"['/stockprice']\">Stock List</a>\n              </li>\n              <li>\n                <a class=\"nav-link\" href [routerLink]=\"['/ipoplan']\">IPO List</a>\n              </li>\n          </ul>\n      </div>\n  </div>\n</div>\n\n<div *ngIf=\"!isRole\" class=\"container\">\n  <h3>User Dashboad</h3>\n  <div class=\"row\">\n    <div class=\"col-sm-8\">\n      <ul class=\"nav-item active\">\n        <li>\n          <a class=\"nav-link\" href [routerLink]=\"['/signup']\">Signup</a>\n        </li>\n        <li>\n          <a class=\"nav-link\" href [routerLink]=\"['/userprofile', loginuser]\">User Profile</a>\n        </li>\n        <li>\n          <a class=\"nav-link\" href [routerLink]=\"['/changepwd', loginuser]\">Change Password</a>\n        </li>\n        <li>\n          <a class=\"nav-link\" href [routerLink]=\"['/stockprice']\">Stock List</a>\n        </li>\n        <li>\n          <a class=\"nav-link\" href [routerLink]=\"['/ipoplan']\">IPO List</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--\n * @Author: your name\n * @Date: 2020-04-18 20:42:48\n * @LastEditTime: 2020-04-20 13:40:32\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\footer\\footer.component.html\n -->\n<footer class=\"footer navbar-fixed-bottom \">\n  <div class=\"container\">\n    <a href=\"https://techademy.in/app/home\" target=\"_blank\">FSD IBM Learning</a> |\n    <a href=\"https://spring.io/guides\" target=\"_blank\">Spring Guide</a> |\n    <a href=\"https://angular.io/docs\" target=\"_blank\">Angular Guide</a>\n  </div>\n</footer>\n","import { Injectable } from '@angular/core';\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpErrorResponse, HttpEventType } from  '@angular/common/http';\nimport { map } from  'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n@Component({\n  selector: 'app-importstock',\n  templateUrl: './importstock.component.html',\n  styleUrls: ['./importstock.component.css']\n})\nexport class ImportstockComponent implements OnInit {\n\n  constructor(private httpclient: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  upload(fileData): any {\n    return this.httpclient.post<any>(\"C:\\sammi\\fullstack\", fileData, {\n      reportProgress: true,\n      observe: 'events'\n    });\n\n  }\n\n}\n","<!--\n * @Author: your name\n * @Date: 2020-04-21 18:08:47\n * @LastEditTime: 2020-04-26 09:30:30\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\importstock\\importstock.component.html\n -->\n<div class=\"col-sm-12\" ngController=\"myUser\">\n  <form class=\"form-horizontal\" #myForm=\"ngForm\" method=\"POST\" (ngSubmit)=\"upload(myForm.value)\" novalidate>\n      <span><a href = \"../../assets/import/sample_stock_data.xlsx\">Download Stock Price Demo File</a></span>\n      <div class=\"form-group\">\n          <label class=\"col-sm-2 control-label\">Stock File</label>\n          <div class=\"col-sm-8\">\n              <input type=\"file\" class=\"form-control\" name=\"uploadfile\" id=\"uploadfile\" ngModel>\n          </div>\n      </div>\n      <div class=\"btn-toolbar\" role=\"toolbar\">\n          <div class=\"col-sm-offset-2 col-sm-4\">\n              <div class=\"btn-group\">\n                  <button type=\"submit\" class=\"btn btn-primary\">Import</button>\n              </div>\n          </div>\n      </div>\n  </form>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { IpoplanService } from '../../../service/ipoplan.service';\nimport { DictsinfoService } from './../../../service/dictsinfo.service';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\n\ninterface Alert {\n  type: string;\n  message: string;\n}\n\nconst ALERTS: Alert[] = [];\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.css']\n})\nexport class DetailComponent implements OnInit {\n\n  alerts : Alert[];\n\n  constructor(private routeInfo: ActivatedRoute, private router:Router, private ipoplanservice: IpoplanService, public dictsinfo: DictsinfoService) {\n    this.reset();\n  }\n  sexchange: any;\n  ipoid: string;\n  ipodetail: any;\n\n  ngOnInit(): void {\n    this.sexchange = this.dictsinfo.getStockExchange();\n\n    this.ipoid = this.routeInfo.snapshot.params['id'];\n\n    this.ipodetail = this.ipoplanservice.getIPOInfo(this.ipoid);\n  }\n\n  ngSaveIPO(value: any) {\n    if (this.validInput(value)) {\n      this.ipoplanservice.setIPO(value).subscribe(\n        data => {\n          console.log(JSON.stringify(data));\n          const info: any = data;\n          if (200 === info.code) {\n              console.log('modify company info successful,redirect page...');\n              this.router.navigate(['/ipoplan']);\n          } else {\n            console.log('modify company info failing.');\n            this.alerts.push({type : 'danger', message: 'please contact administrators!'});\n          }\n        }\n      );\n    }\n  }\n\n  reset(): void {\n    this.alerts = Array.from(ALERTS);\n  }\n\n  close(alert: Alert): void {\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\n  }\n\n  validInput(value: any): boolean {\n    if (!value.companyname) {\n      this.alerts.push({type : 'danger', message: 'companyname required!'});\n      return false;\n    }\n\n    return true;\n  }\n\n}\n","<div class=\"col-sm-12\" ngController=\"myIPO\">\n  <h3>Edit IPO</h3>\n  <p *ngFor=\"let alert of alerts\">\n    <ngb-alert [type]=\"alert.type\" (close)=\"close(alert)\">{{ alert.message }}</ngb-alert>\n  </p>\n  <form class=\"form-horizontal\" #myForm=\"ngForm\" (ngSubmit)=\"ngSaveIPO(myForm.value)\" novalidate>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Company Name</label>\n          <div class=\"col-sm-8\">\n            <input type=\"text\" class=\"form-control\" ngModel id=\"companyname\" name=\"companyname\" placeholder=\"type company name\" [(ngModel)]=\"ipodetail.companyname\" required>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Stock Exchange</label>\n          <div class=\"col-sm-8\">\n            <select class=\"form-control\" ngModel id=\"stockexchange\" [(ngModel)]=\"ipodetail.sexchange\" name=\"stockexchange\">\n              <option *ngFor=\"let sechang of sexchange\" [value]=\"sechang\" [selected]=\"sechang===ipodetail.sexchange\">{{sechang}}</option>\n            </select>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Price</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" ngModel class=\"form-control\" name=\"price\" placeholder=\"type price\" [(ngModel)]=\"ipodetail.price\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Total Number</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" ngModel class=\"form-control\" name=\"totalnumber\" placeholder=\"type total number\" [(ngModel)]=\"ipodetail.totalnum\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Open Date</label>\n          <div class=\"col-sm-8\">\n              <input type=\"date\" ngModel class=\"form-control\" name=\"opendate\" placeholder=\"type open date\" [(ngModel)]=\"ipodetail.opendate\">\n          </div>\n      </div>\n\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Remarks</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" ngModel class=\"form-control\" name=\"remarks\" placeholder=\"type remarks\" [(ngModel)]=\"ipodetail.remarks\">\n          </div>\n      </div>\n      <div class=\"btn-toolbar\" role=\"toolbar\">\n          <div class=\"col-sm-offset-4 col-sm-8\">\n              <div class=\"btn-group\">\n                  <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n                  <button type=\"reset\" class=\"btn btn-secondary\">Reset</button>\n              </div>\n          </div>\n      </div>\n  </form>\n</div>\n","import { DictsinfoService } from './../../service/dictsinfo.service';\nimport { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-ipoplan',\n  templateUrl: './ipoplan.component.html',\n  styleUrls: ['./ipoplan.component.css']\n})\nexport class IpoplanComponent implements OnInit {\n\n  constructor(public dictinfo: DictsinfoService) { }\n\n  ipoplans : any;\n  ngOnInit(): void {\n    this.ipoplans = this.dictinfo.getMockIPOList();\n  }\n\n}\n","<!--\n * @Author: your name\n * @Date: 2020-04-22 14:52:52\n * @LastEditTime: 2020-04-22 16:30:00\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\ipoplan\\ipoplan.component.html\n -->\n<div class=\"col-sm-12\">\n  <h3>IPO Plan List</h3>\n  <table class=\"table table-striped table-bordered table-hover table-condensed\">\n      <thead>\n      <tr>\n          <th>Company Name</th>\n          <th>Stock Exchange</th>\n          <th>Price</th>\n          <th>Total Number</th>\n          <th>Open Date</th>\n          <th>Remarks</th>\n      </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let ipo of ipoplans\">\n          <td><a class=\"nav-link\" href [routerLink]=\"['/ipodetail', ipo.id]\">{{ ipo.companyname }}</a></td>\n          <td>{{ ipo.stockexchange }}</td>\n          <td>{{ ipo.price | money }}</td>\n          <td>{{ ipo.totalnumber | number }}</td>\n          <td>{{ ipo.opendate }}</td>\n          <td>{{ ipo.remarks }}</td>\n      </tr>\n      </tbody>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Unit } from '../../service/unit';\nimport { Router } from '@angular/router';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\n\ninterface Alert {\n  type: string;\n  message: string;\n}\n\nconst ALERTS: Alert[] = [];\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  alerts : Alert[];\n\n  constructor(private unit: Unit, private route: Router, private http: HttpClient) {\n    this.reset();\n   }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(value: any) {\n    if (this.validInput(value)) {\n      this.unit.postSignIn(value).subscribe(\n        data => {\n          console.log(JSON.stringify(data));\n          const info: any = data;\n          if (info.token.length > 5) {\n            if (info.userinfo.usertype === 'admin') {\n              sessionStorage.setItem('token', 'admin');\n            } else {\n              sessionStorage.setItem('token', 'seller');\n            }\n            sessionStorage.setItem('loginuser',info.userinfo.id);\n            sessionStorage.setItem('loginname',info.userinfo.username);\n              console.log('login successful,redirect page...');\n              this.route.navigate(['/dashboad']);\n          } else {\n            console.log('login failing.');\n            this.alerts.push({type : 'danger', message: 'username or password error!'});\n\n          }\n        }\n      );\n    }\n  }\n\n  reset(): void {\n    this.alerts = Array.from(ALERTS);\n  }\n\n  close(alert: Alert): void {\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\n  }\n\n  validInput(value: any): boolean {\n    this.reset();\n    if (!value.username) {\n      this.alerts.push({type : 'danger', message: 'username required!'});\n      return false;\n    }\n\n    if (!value.password) {\n      this.alerts.push({type : 'danger', message: 'password required!'});\n      return false;\n    }\n\n    return true;\n  }\n\n}\n","<div class=\"container div-signin\" ngController=\"myUser\">\n  <form class=\"form-signin form-horizontal\" method=\"POST\" #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit(loginForm.value)\" novalidate>\n    <h1 class=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n\n    <p *ngFor=\"let alert of alerts\">\n      <ngb-alert [type]=\"alert.type\" (close)=\"close(alert)\">{{ alert.message }}</ngb-alert>\n    </p>\n    <div class=\"form-group\">\n      <label class=\"col-sm-2 control-label\">Username</label>\n      <div class=\"col-sm-4\">\n        <input ngModel name=\"username\" id=\"username\" class=\"form-control\" placeholder=\"UserName\" type=\"text\">\n      </div>\n  </div>\n  <div class=\"form-group\">\n    <label class=\"col-sm-2 control-label\">Password</label>\n    <div class=\"col-sm-4\">\n      <input ngModel name=\"password\" type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Password\">\n    </div>\n  </div>\n    <div class=\"checkbox mb-3\">\n      <label>\n        <input type=\"checkbox\" ngModel value=\"remember-me\" name=\"saveme\" checked> Remember Me\n      </label>\n    </div>\n    <div class=\"btn-toolbar\" role=\"toolbar\">\n      <div class=\"col-sm-offset-2 col-sm-4\">\n          <div class=\"btn-group\">\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Login</button>\n            <input type=\"hidden\" name=\"_method\" value=\"POST\" />\n          </div>\n      </div>\n    </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Unit} from '../../service/unit';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private router: Router, private routeInfo: ActivatedRoute) { }\n\n   isSignin: boolean;\n   isRole: boolean;\n   loginuser: string;\n\n  ngOnInit(): void {\n    if (sessionStorage.getItem('token')){\n      if (sessionStorage.getItem('token') === 'admin'){\n        this.isRole = true;\n      } else {\n        this.isRole = false;\n      }\n      this.isSignin = true;\n      this.loginuser = sessionStorage.getItem('loginuser');\n    } else {\n      this.isSignin = false;\n    }\n  }\n\n  ngDoCheck(): void {\n    console.log('docheck');\n    if (sessionStorage.getItem('token')){\n      this.isSignin = true;\n    } else {\n      this.isSignin = false;\n    }\n  }\n\n  signOut() {\n    sessionStorage.removeItem('token');\n    sessionStorage.removeItem('loginuser');\n    this.router.navigate(['/login']);\n  }\n}\n\n","<!--\n * @Author: your name\n * @Date: 2020-04-18 20:42:34\n * @LastEditTime: 2020-04-23 14:58:37\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\navbar\\navbar.component.html\n -->\n<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark navbar-fixed-top\">\n  <a class=\"navbar-brand\" href=\"#\">Stock</a>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n    <ul *ngIf=\"isRole\" class=\"navbar-nav mr-auto\">\n      <li *ngIf=\"!isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/login']\">Home</a>\n      </li>\n      <li *ngIf=\"isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/dashboad']\">Dashboad</a>\n      </li>\n      <li *ngIf=\"isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/companylist']\">Company List</a>\n      </li>\n      <li *ngIf=\"isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/ipoplan']\">IPO List</a>\n      </li>\n      <li *ngIf=\"isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/importstock']\">Import Data</a>\n      </li>\n      <li *ngIf=\"isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/stockprice']\">Stock Price</a>\n      </li>\n    </ul>\n    <ul *ngIf=\"!isRole\" class=\"navbar-nav mr-auto\">\n      <li *ngIf=\"!isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/login']\">Home</a>\n      </li>\n      <li *ngIf=\"isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/dashboad']\">Dashboad</a>\n      </li>\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/signup']\">Signup</a>\n      </li>\n      <li *ngIf=\"isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/changepwd',loginuser]\">Change Password</a>\n      </li>\n      <li *ngIf=\"isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/userprofile',loginuser]\">User Profile</a>\n      </li>\n      <li *ngIf=\"isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/ipoplan']\">IPO List</a>\n      </li>\n      <li *ngIf=\"isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/stockprice']\">Stock Price</a>\n      </li>\n    </ul>\n    <form class=\"form-inline mt-2 mt-md-0\">\n      <button *ngIf=\"!isSignin\" class=\"btn btn-outline-primary\" type=\"submit\" [routerLink]=\"['/login']\">Login</button>\n      <button *ngIf=\"isSignin\" class=\"btn btn-outline-secondary\" type=\"submit\" (click)=\"signOut()\">LogOut</button>\n    </form>\n  </div>\n</nav>\n","import { DictsinfoService } from '../../service/dictsinfo.service';\nimport { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { CompanyService } from '../../service/company.service';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-strockprice',\n  templateUrl: './strockprice.component.html',\n  styleUrls: ['./strockprice.component.css']\n})\nexport class StrockpriceComponent implements OnInit {\n\n  prices: any;\n  options: any;\n  isDisplay: boolean;\n\n  constructor(public dictinfo: DictsinfoService,private router:Router,private companyservice: CompanyService) {\n    this.isDisplay = false;\n  }\n\n  ngOnInit(): void {\n    this.prices = this.dictinfo.getMockStockPrice();\n\n    this.options = {\n      xAxis: {\n          type: 'category',\n          data: ['Company001', 'Company002']\n      },\n      yAxis: {\n          type: 'value',\n          data: [5,400]\n      },\n      series: [{\n          itemStyle: {\n            color: 'blue',\n            barBorderRadius: [18, 18, 0 ,0]\n          },\n          barWidth: 40,\n          barCategoryGap: '20%',\n          data: [40, 100],\n          type: 'bar'\n      }]\n  };\n  }\n\n  getCompanyList(value: any) {\n    this.companyservice.getCompanyList(value).subscribe(\n      data => {\n        console.log(JSON.stringify(data));\n        const info: any = data;\n        if (200 === info.code) {\n            console.log('company list successful,redirect page...');\n            this.router.navigate(['/companylist']);\n        } else {\n          console.log('modify company info failing.');\n        }\n      }\n    );\n  }\n\n\n  showCompanyCharts(): void {\n    this.isDisplay = !this.isDisplay;\n  }\n\n}\n","<div class=\"col-sm-12\">\n  <h3>Search Stock Price List</h3>\n  <form class=\"form-horizontal\" #myForm=\"ngForm\" (ngSubmit)=\"getCompanyList(myForm.value)\" novalidate>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Company A</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" ngModel id=\"companya\" name=\"companya\" class=\"form-control\" placeholder=\"type company name\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Company B</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" class=\"form-control\" ngModel id=\"companyb\" name=\"companyb\" placeholder=\"type company name\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">From Date</label>\n          <div class=\"col-sm-8\">\n              <input type=\"date\" class=\"form-control\" ngModel id=\"date1\" name=\"date1\" placeholder=\"type start date\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">End Date</label>\n          <div class=\"col-sm-8\">\n              <input type=\"date\" class=\"form-control\" ngModel id=\"date2\" name=\"date2\" placeholder=\"type end date\">\n          </div>\n      </div>\n      <div class=\"btn-toolbar\" role=\"toolbar\">\n          <div class=\"col-sm-offset-4 col-sm-8\">\n              <div class=\"btn-group\">\n                  <button type=\"submit\" class=\"btn btn-primary\">Search</button>\n                  <button type=\"reset\" class=\"btn btn-secondary\">Clean</button>\n              </div>\n          </div>\n      </div>\n  </form>\n  <div class=\"row\">\n    <table class=\"table table-striped table-bordered table-hover table-condensed\">\n        <thead>\n        <tr>\n            <th>Company Name</th>\n            <th>Stock Exchange</th>\n            <th>Price</th>\n            <th>Date</th>\n            <th>&nbsp;&nbsp;</th>\n        </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let pri of prices\">\n            <td>{{ pri.companyname }}</td>\n            <td>{{ pri.stockexchange }}</td>\n            <td>{{ pri.price | money }}</td>\n            <td>{{ pri.date }}</td>\n            <td><a ngModel (click)=\"showCompanyCharts()\">View Chart</a></td>\n        </tr>\n        </tbody>\n    </table>\n  </div>\n  <div [hidden]=\"!isDisplay\" echarts [options]=\"options\" width=\"600\" height=\"300\"></div>\n</div>\n","import { UserService } from './../../../service/user';\nimport { Component, OnInit, Input } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { DictsinfoService } from './../../../service/dictsinfo.service';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\n\ninterface Alert {\n  type: string;\n  message: string;\n}\n\nconst ALERTS: Alert[] = [];\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\n\nexport class SignupComponent implements OnInit {\n\n  alerts : Alert[];\n\n  @Input() searchname: any;\n  @Input() searchdate: any;\n\n  constructor(private routeInfo: ActivatedRoute, private router:Router, private userservice: UserService, public dictsinfo: DictsinfoService) {\n    this.reset();\n  }\n\n  usertype: any;\n  userconfirmed: any;\n\n  ngOnInit(): void {\n    this.usertype = this.dictsinfo.getUserType();\n    this.userconfirmed = this.dictsinfo.getUserConfirmed();\n  }\n\n  ngSignup(value: any) {\n    if (this.validInput(value)) {\n      this.userservice.signup(value).subscribe(\n        data => {\n          console.log(JSON.stringify(data));\n          const info: any = data;\n          if (info.userinfo.username != '') {\n              if (sessionStorage.getItem(\"loginuser\")) {\n                console.log('signup successful,redirect page...');\n                this.router.navigate(['/dashboad']);\n              } else {\n                console.log('signup successful,redirect page...');\n              this.router.navigate(['/login']);\n              }\n          } else {\n            console.log('signup failing.');\n            this.alerts.push({type : 'danger', message: 'please contact administrators!'});\n          }\n        }\n      );\n    }\n  }\n\n  reset(): void {\n    this.alerts = Array.from(ALERTS);\n  }\n\n  close(alert: Alert): void {\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\n  }\n\n  validInput(value: any): boolean {\n    if (!value.username) {\n      this.alerts.push({type : 'danger', message: 'username required!'});\n      return false;\n    }\n\n    if (!value.password) {\n      this.alerts.push({type : 'danger', message: 'password required!'});\n      return false;\n    }\n\n    if (!value.confirmpwd) {\n      this.alerts.push({type : 'danger', message: 'confirm password required!'});\n      return false;\n    }\n\n    if (value.confirmpwd !== value.password) {\n      this.alerts.push({type : 'danger', message: 'input password is different!'});\n      return false;\n    }\n\n    return true;\n  }\n}\n\n","<div class=\"container\" ngController=\"mySignup\">\n  <div class=\"row\">\n      <div class=\"col-sm-12\">\n          <h3>Signup</h3>\n          <p *ngFor=\"let alert of alerts\">\n            <ngb-alert [type]=\"alert.type\" (close)=\"close(alert)\">{{ alert.message }}</ngb-alert>\n          </p>\n          <form class=\"form-horizontal\" #myForm=\"ngForm\" (ngSubmit)=\"ngSignup(myForm.value)\" novalidate>\n              <div class=\"form-group\">\n                  <label class=\"col-sm-4 control-label\">User Name</label>\n                  <div class=\"col-sm-8\">\n                      <input type=\"text\" class=\"form-control\" ngModel id=\"username\" name=\"username\" placeholder=\"type user name\"  required>\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                  <label class=\"col-sm-4 control-label\">Password</label>\n                  <div class=\"col-sm-8\">\n                      <input type=\"password\" ngModel class=\"form-control\" name=\"password\" placeholder=\"type password\" required>\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                  <label class=\"col-sm-4 control-label\">Confirm Password</label>\n                  <div class=\"col-sm-8\">\n                      <input type=\"password\" ngModel class=\"form-control\" name=\"confirmpwd\" placeholder=\"type confirm password\" required>\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                  <label class=\"col-sm-4 control-label\">User Type</label>\n                  <div class=\"col-sm-8\">\n                      <select class=\"form-control\" ngModel id=\"usertype\" name=\"usertype\">\n                        <option *ngFor=\"let utype of usertype\" [value]=\"utype\">{{utype}}</option>\n                      </select>\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                  <label class=\"col-sm-4 control-label\">Email</label>\n                  <div class=\"col-sm-8\">\n                      <input type=\"text\" ngModel name=\"email\" class=\"form-control\" placeholder=\"type e-mail\">\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                  <label class=\"col-sm-4 control-label\">Mobile</label>\n                  <div class=\"col-sm-8\">\n                      <input type=\"text\" ngModel name=\"mobile\" class=\"form-control\" placeholder=\"type mobile\">\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                <label class=\"col-sm-4 control-label\">User Confirmed</label>\n                <div class=\"col-sm-8\">\n                    <select class=\"form-control\" ngModel id=\"confirmed\" name=\"confirmed\">\n                      <option *ngFor=\"let uconfirm of userconfirmed\" [value]=\"uconfirm\">{{uconfirm}}</option>\n                    </select>\n                </div>\n            </div>\n              <div class=\"btn-toolbar\" role=\"toolbar\">\n                  <div class=\"col-sm-offset-4 col-sm-8\">\n                      <div class=\"btn-group\">\n                          <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n                          <button type=\"reset\" class=\"btn btn-secondary\">Reset</button>\n                      </div>\n                  </div>\n              </div>\n          </form>\n          <div class=\"col-sm-12\">\n              <p>&nbsp;</p>\n              <p>send confirm email if email is not exists[POP3]</p>\n              <p>redirect login page if exists</p>\n          </div>\n      </div>\n  </div>\n</div>\n","/*\n * @Author: your name\n * @Date: 2020-04-22 14:05:22\n * @LastEditTime: 2020-04-24 13:57:05\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\user\\user-password\\user-password.component.ts\n */\nimport { Component, OnInit } from '@angular/core';\nimport { UserService } from './../../../service/user';\nimport { ActivatedRoute, Router } from '@angular/router';\n\ninterface Alert {\n  type: string;\n  message: string;\n}\n\nconst ALERTS: Alert[] = [];\n\n@Component({\n  selector: 'app-user-password',\n  templateUrl: './user-password.component.html',\n  styleUrls: ['./user-password.component.css']\n})\nexport class UserPasswordComponent implements OnInit {\n  alerts : Alert[];\n  userInfo: any;\n\n  constructor(private routeInfo: ActivatedRoute, private router:Router, public userservice: UserService) {\n    this.reset();\n  }\n\n  ngOnInit(): void {\n    this.userInfo = {\n      userid: sessionStorage.getItem(\"loginuser\"),\n      username: sessionStorage.getItem(\"loginname\")\n    };\n  }\n\n  updateUserPwd(value: any) {\n    if (this.validInput(value)) {\n      this.userservice.setUserPwd(value).subscribe(\n        data => {\n          console.log(JSON.stringify(data));\n          const info: any = data;\n          if (200 === info.code) {\n              console.log('login successful,redirect page...');\n              this.router.navigate(['/sellerlist']);\n          } else {\n            console.log('login failing.');\n            this.alerts.push({type : 'danger', message: 'username or password error!'});\n          }\n        }\n      );\n    }\n  }\n\n  reset(): void {\n    this.alerts = Array.from(ALERTS);\n  }\n\n  close(alert: Alert): void {\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\n  }\n\n  validInput(value: any): boolean {\n    if (!value.oldpassword) {\n      this.alerts.push({type : 'danger', message: 'old password required!'});\n      return false;\n    }\n    if (!value.password) {\n      this.alerts.push({type : 'danger', message: 'password required!'});\n      return false;\n    }\n\n    if (!value.cfmpassword) {\n      this.alerts.push({type : 'danger', message: 'cfmpassword required!'});\n      return false;\n    }\n\n    if (value.password === value.oldpassword) {\n      this.alerts.push({type : 'danger', message: 'the second password  cannot be the same !'});\n      return false;\n    }\n\n    if (value.password !== value.cfmpassword) {\n      this.alerts.push({type : 'danger', message: 'password is different cfmpassword !'});\n      return false;\n    }\n\n    return true;\n  }\n\n}\n","<!--\n * @Author: your name\n * @Date: 2020-04-22 14:05:22\n * @LastEditTime: 2020-04-24 13:55:03\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\user\\user-password\\user-password.component.html\n -->\n<div class=\"col-sm-12\" ngController=\"myUser\">\n  <h3>Change Password</h3>\n  <p *ngFor=\"let alert of alerts\">\n    <ngb-alert [type]=\"alert.type\" (close)=\"close(alert)\">{{ alert.message }}</ngb-alert>\n  </p>\n  <form class=\"form-horizontal\" #myForm=\"ngForm\" (ngSubmit)=\"updateUserPwd(myForm.value)\" novalidate>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">User Name</label>\n          <div class=\"col-sm-8\">\n              <input type=\"hidden\" ngModel id=\"username\" name=\"username\" [(ngModel)]=\"userInfo.username\">\n              <input type=\"text\" ngModel id=\"userid\" name=\"userid\" class=\"form-control\" [(ngModel)]=\"userInfo.username\" disabled>\n          </div>\n      </div>\n      <div class=\"form-group\">\n        <label class=\"col-sm-4 control-label\">Old Password</label>\n        <div class=\"col-sm-8\">\n            <input type=\"password\" ngModel id=\"oldpassword\" name=\"oldpassword\" class=\"form-control\" placeholder=\"type password\" required>\n        </div>\n    </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Password</label>\n          <div class=\"col-sm-8\">\n              <input type=\"password\" ngModel id=\"password\" name=\"password\" class=\"form-control\" placeholder=\"type password\" required>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Confirm Password</label>\n          <div class=\"col-sm-8\">\n              <input type=\"password\" class=\"form-control\" ngModel id=\"cfmpassword\" name=\"cfmpassword\" placeholder=\"type password\" required>\n          </div>\n      </div>\n      <div class=\"btn-toolbar\" role=\"toolbar\">\n          <div class=\"col-sm-offset-4 col-sm-8\">\n              <div class=\"btn-group\">\n                  <button type=\"submit\" class=\"btn btn-primary\">Change Password</button>\n              </div>\n          </div>\n      </div>\n  </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DictsinfoService } from './../../../service/dictsinfo.service';\nimport { UserService } from './../../../service/user';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\n\ninterface Alert {\n  type: string;\n  message: string;\n}\n\nconst ALERTS: Alert[] = [];\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n  alerts : Alert[];\n\n  constructor(private routeInfo: ActivatedRoute, private router:Router, public userservice: UserService, public dictinfo: DictsinfoService) {\n    this.reset();\n   }\n\n  userid: any;\n  userInfo: any;\n  usertype: any;\n\n  ngOnInit(): void {\n    this.usertype = this.dictinfo.getUserType();\n    this.userid = this.routeInfo.snapshot.params['id'];\n    this.userInfo = this.userservice.getUserInfo(this.userid);\n  }\n\n  updateUserProfile(value: any) {\n    if (this.validInput(value)) {\n      this.userservice.setUserInfo(value).subscribe(\n        data => {\n          console.log(JSON.stringify(data));\n          const info: any = data;\n          if (200 === info.code) {\n              console.log('login successful,redirect page...');\n              this.router.navigate(['/sellerlist']);\n          } else {\n            console.log('login failing.');\n            this.alerts.push({type : 'danger', message: 'username or password error!'});\n          }\n        }\n      );\n    }\n  }\n\n  reset(): void {\n    this.alerts = Array.from(ALERTS);\n  }\n\n  close(alert: Alert): void {\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\n  }\n\n  validInput(value: any): boolean {\n    if (!value.username) {\n      this.alerts.push({type : 'danger', message: 'username required!'});\n      return false;\n    }\n\n    return true;\n  }\n\n}\n","<!--\n * @Author: your name\n * @Date: 2020-04-21 17:50:13\n * @LastEditTime: 2020-04-24 13:29:34\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\user\\user-profile\\user-profile.component.html\n -->\n<div class=\"col-sm-12\" ngController=\"myUser\">\n    <span><a href [routerLink]=\"['/changepwd', userid]\">change user password</a></span>\n  <h3>User Profile</h3>\n  <p *ngFor=\"let alert of alerts\">\n    <ngb-alert [type]=\"alert.type\" (close)=\"close(alert)\">{{ alert.message }}</ngb-alert>\n  </p>\n  <form class=\"form-horizontal\" #myForm=\"ngForm\" (ngSubmit)=\"updateUserProfile(myForm.value)\" novalidate>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">User Name</label>\n          <div class=\"col-sm-8\">\n            <input type=\"hidden\" ngModel id=\"username\" name=\"username\" [(ngModel)]=\"userInfo.username\">\n              <input type=\"text\" ngModel id=\"displayname\" name=\"displayname\" class=\"form-control\" [(ngModel)]=\"userInfo.username\" disabled>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">User Type</label>\n          <div class=\"col-sm-8\">\n            <select ngModel class=\"form-control\" [(ngModel)]=\"userInfo.usertype\" id=\"usertype\" name=\"usertype\">\n              <option *ngFor=\"let utype of usertype\" [value]=\"utype\" [selected]=\"utype===userInfo.usertype\">{{utype}}</option>\n            </select>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Email</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" ngModel class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"type e-mail\" [(ngModel)]=\"userInfo.email\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Mobile</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" ngModel class=\"form-control\" id=\"mobile\" name=\"mobile\" placeholder=\"type mobile\" [(ngModel)]=\"userInfo.mobile\">\n          </div>\n      </div>\n      <div class=\"btn-toolbar\" role=\"toolbar\">\n          <div class=\"col-sm-offset-4 col-sm-8\">\n              <div class=\"btn-group\">\n                  <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n                  <button type=\"reset\" class=\"btn btn-secondary\">Reset</button>\n              </div>\n          </div>\n      </div>\n  </form>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from './../../service/user';\n\ninterface SellerInfo {\n  id: string;\n  name: string;\n  usertype: string;\n  email: string;\n  mobile: string;\n}\n\nconst GUEST: SellerInfo[] = [{\n  id: '1',\n  name: 'seller001',\n  usertype: 'seller',\n  email: 'test1@cn.ibm.com',\n  mobile: '13900009999'\n}, {\n  id: '2',\n  name: 'seller002',\n  usertype: 'seller',\n  email: 'test2@cn.ibm.com',\n  mobile: '13900008888'\n}\n];\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor(private userservice: UserService) { }\n\n  users: SellerInfo[];\n\n  ngOnInit(): void {\n    this.users = GUEST\n  }\n\n}\n","<!--\n * @Author: your name\n * @Date: 2020-04-17 17:46:37\n * @LastEditTime: 2020-04-22 14:19:23\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\user\\user.component.html\n -->\n<div class=\"col-sm-12\">\n  <h3>Seller List</h3>\n  <table class=\"table table-striped table-bordered table-hover table-condensed\">\n      <thead>\n      <tr>\n          <th>User name</th>\n          <th>User Type</th>\n          <th>E-mail</th>\n          <th>Mobile</th>\n          <th>operation</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr>\n      <tr *ngFor=\"let user of users\" >\n        <td>{{ user.name }}</td>\n        <td>{{ user.usertype }}</td>\n        <td>{{ user.email }}</td>\n        <td>{{ user.mobile }}</td>\n        <td><a [routerLink]=\"['/sellerprofile', user.id]\">View Seller</a></td>\n    </tr>\n      </tbody>\n  </table>\n</div>\n","import { Injectable } from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n\n  constructor(private router: Router) {\n  }\n\n  canActivate() {\n    if (!sessionStorage.getItem('token')) {\n      alert('Please Sign in')\n      return false;\n    } else{\n      return true;\n    }\n  }\n}\n","/*\n * @Author: your name\n * @Date: 2020-04-21 16:03:00\n * @LastEditTime: 2020-04-21 20:24:27\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\money.pipe.ts\n */\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'money'\n})\nexport class MoneyPipe implements PipeTransform {\n\n  transform(value: number, floats?: number): string {\n    return value.toFixed(isNaN(floats) ? 2 : floats);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport { Observable } from 'rxjs';\nimport {HttpParams} from \"@angular/common/http\";\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CompanyService {\n  id: string;\n  name: string;\n  turnover: string;\n  ceo: string;\n  bod: string;\n  sexchange: string;\n  price: number;\n  sector: string;\n  brief: string;\n  stockcode: string;\n\n  constructor(private http: HttpClient) { }\n\n  getAllCompanyList() {\n    return this.http.post(`${environment.baseUrl}/companylist`, JSON.stringify(''), httpOptions);\n  }\n\n  getComppanyInfo(id: string) {\n    return {\n      id: '1',\n      companyname:'Company001',\n      turnover: 'testdemo',\n      ceo: 'IBM-Learning',\n      bod: 'test demo data',\n      sexchange: 'NSE',\n      sector: '3',\n      brief: 'testssss',\n      stockcode: 'stockcode002'\n    };\n  }\n\n  setCompanyInfo(value: any) {\n    return this.http.post(`${environment.companyUrl}/companyaction`, JSON.stringify(value), httpOptions);\n  }\n\n  getCompanyList(value: any) {\n    const params = new HttpParams()\n    .set('id', value);\n    return this.http.get(`${environment.companyUrl}/company/list/`, {\n      headers: new HttpHeaders().set('Content-Type', 'application/json'),\n      params\n    });\n  }\n\n  getCompanyById(id: any) {\n    const params = new HttpParams()\n    .set('id', id);\n    return this.http.get(`${environment.companyUrl}/company/`, {\n      headers: new HttpHeaders().set('Content-Type', 'application/json'),\n      params\n    });\n  }\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { stringify } from 'querystring';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DictsinfoService {\n\n  constructor() { }\n\n  getStockExchange() : any {\n    return ['BSE', 'NSE'];\n  }\n\n  getMockStockCode(): any {\n    return ['stockcode001', 'stockcode002', 'stockcode003'];\n  }\n\n  getUserType(): any {\n    return ['Admin', 'User'];\n  }\n\n  getUserConfirmed(): any {\n    return ['Yes', 'No'];\n  }\n\n  getMockSectorsList(): any {\n    return [{\n      id:'1',\n      sectorname: 'sn001',\n      brief: 'test001'\n    },{\n      id:'2',\n      sectorname: 'sn002',\n      brief: 'test002'\n    },{\n      id:'3',\n      sectorname: 'sn003',\n      brief: 'test003'\n    },{\n      id:'4',\n      sectorname: 'sn004',\n      brief: 'test004'\n    }\n    ];\n  }\n\n  getMockStockPrice(): any {\n    return [{\n      id:'1',\n      companyname: 'company001',\n      stockexchange: 'BSE',\n      price: 44.12,\n      date: '2020-07-28',\n      time: '13:00'\n    },{\n      id:'2',\n      companyname: 'company002',\n      stockexchange: 'NSE',\n      price: 23.1,\n      date: '2020-07-28',\n      time: '13:00'\n    },{\n      id:'3',\n      companyname: 'company003',\n      stockexchange: 'NSE',\n      price: 78.1,\n      date: '2020-07-28',\n      time: '13:00'\n    },{\n      id:'4',\n      companyname: 'company004',\n      stockexchange: 'BSE',\n      price: 12.4,\n      date: '2020-07-28',\n      time: '13:00'\n    }\n    ];\n  }\n\n  getMockIPOList(): any {\n    return [{\n      id:'1',\n      companyname: 'company001',\n      stockexchange: 'BSE',\n      price: 44.12,\n      totalnumber: 100000,\n      units: '手',\n      opendate: '2020-07-28',\n      remarks: 'test001'\n    },{\n      id:'2',\n      companyname: 'company002',\n      stockexchange: 'NSE',\n      price: 23.1,\n      totalnumber: 100000,\n      units: '手',\n      opendate: '2020-07-20',\n      remarks: 'test002'\n    },{\n      id:'3',\n      companyname: 'company003',\n      stockexchange: 'NSE',\n      price: 78.1,\n      totalnumber: 100000,\n      units: '手',\n      opendate: '2020-08-28',\n      remarks: 'test003'\n    },{\n      id:'4',\n      companyname: 'company004',\n      stockexchange: 'BSE',\n      price: 12.4,\n      totalnumber: 100000,\n      units: '手',\n      opendate: '2020-09-08',\n      remarks: 'test004'\n    }\n    ];\n  }\n\n  getSearchJson(): any {\n    return [{\n      condition1: {\n        companycode: '*',\n        startdate: '****-**-**',\n        enddate: '****-**-**'\n      },\n      condition2: {\n        date: '****-**-**',\n        company1: '*',\n        company2: '*'\n      }\n    }];\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {environment} from '../../environments/environment';\nimport { Observable } from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class IpoplanService {\n  id: string;\n  companyname: string;\n  sexchange: string;\n  price: number;\n  totalnum: number;\n  opendate: string;\n  remarks: string;\n\n  constructor(private http: HttpClient) { }\n\n  getAllIPOList() {\n    return this.http.post(`${environment.companyUrl}/ipoplan`, JSON.stringify(''), httpOptions);\n  }\n\n  getIPOInfo(id: string) {\n    return {\n      id: '1',\n      companyname:'Company001',\n      sexchange: 'NSE',\n      price: 32.29,\n      totalnum: 39999,\n      opendate: '2020-06-09',\n      remarks: 'demo'\n    };\n  }\n\n  setIPO(value: any) {\n    return this.http.post(`${environment.baseUrl}/ipoaction`, JSON.stringify(value), httpOptions);\n  }\n\n  getIPOList(value: any) {\n    return this.http.post(`${environment.baseUrl}/ipoplan`, JSON.stringify(value), httpOptions);\n  }\n\n  getIPOInfoById(id: any) {\n    return this.http.post(`${environment.baseUrl}/doipo`, JSON.stringify(id), httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { UserService } from '../service/user';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class Unit {\n\n  constructor(private http: HttpClient) { }\n\n  public get currentUserToken(): string {\n    return sessionStorage.getItem('token');\n  }\n\n  postSignIn(user): Observable<any> {\n    return this.http.post<any>(`${environment.baseUrl}/user/login`,\n    JSON.stringify(user),\n     httpOptions).pipe(\n      tap(list => console.log('getTestList success!')),\n      catchError(this.handleError('getTestList Error'))\n    );\n  }\n\n  private handleError<T> (operation = 'operation', result?: T) {\n    return(error: any): Observable<T> => {\n      console.error(error);\n      // this.log(`${operation} failed:${error.message}`);\n      return of(result as T);\n    };\n  }\n}\n\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {environment} from '../../environments/environment';\r\nimport {HttpParams} from \"@angular/common/http\";\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class UserService {\r\n  id: string;\r\n  name: string;\r\n  password: string;\r\n  usertype: string;\r\n  email: string;\r\n  mobile: string;\r\n  token?: string;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  allUser() {\r\n    // return this.http.get(`${environment.baseUrl}/sellerlist`, httpOptions);\r\n  }\r\n\r\n  getUserInfo(id: string) {\r\n    const params = new HttpParams()\r\n    .set('id', id);\r\n    return this.http.get(`${environment.baseUrl}/user`, {\r\n      headers: new HttpHeaders().set('Content-Type', 'application/json'),\r\n      params\r\n    });\r\n  }\r\n\r\n  signup(value: any) {\r\n    return this.http.post(`${environment.baseUrl}/user/signup`, JSON.stringify(value), httpOptions);\r\n  }\r\n\r\n  setUserInfo(value: any) {\r\n    return this.http.post(`${environment.baseUrl}/user/changeprofile`, JSON.stringify(value), httpOptions);\r\n  }\r\n\r\n  setUserPwd(value: any) {\r\n    return this.http.post(`${environment.baseUrl}/user/changepwd`, JSON.stringify(value), httpOptions);\r\n  }\r\n}\r\n\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // adminUrl:  'http://localhost:8889',\n  // baseUrl:  'http://localhost:8888'\n  baseUrl:  'http://service-user:8888',\n  adminUrl:  'http://service-company:8887',\n  companyUrl:  'http://service-admin:8889'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}