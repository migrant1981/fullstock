{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/company.service.ts","webpack:///src/app/company/add/add/add.component.ts","webpack:///src/app/company/add/add/add.component.html","webpack:///src/app/company/edit/edit.component.ts","webpack:///src/app/company/edit/edit.component.html","webpack:///src/app/company/list/list.component.ts","webpack:///src/app/company/list/list.component.html","webpack:///src/app/dash/dashboad/dashboad.component.ts","webpack:///src/app/dash/dashboad/dashboad.component.html","webpack:///src/app/dictsinfo.service.ts","webpack:///src/app/footer/footer.component.ts","webpack:///src/app/footer/footer.component.html","webpack:///src/app/importstock/importstock.component.ts","webpack:///src/app/importstock/importstock.component.html","webpack:///src/app/ipoplan.service.ts","webpack:///src/app/ipoplan/detail/detail.component.ts","webpack:///src/app/ipoplan/detail/detail.component.html","webpack:///src/app/ipoplan/ipoplan.component.ts","webpack:///src/app/ipoplan/ipoplan.component.html","webpack:///src/app/login.guard.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/money.pipe.ts","webpack:///src/app/navbar/navbar.component.ts","webpack:///src/app/navbar/navbar.component.html","webpack:///src/app/strockprice/strockprice.component.ts","webpack:///src/app/strockprice/strockprice.component.html","webpack:///src/app/unit.ts","webpack:///src/app/user.ts","webpack:///src/app/user/signup/signup.component.ts","webpack:///src/app/user/signup/signup.component.html","webpack:///src/app/user/user-password/user-password.component.ts","webpack:///src/app/user/user-password/user-password.component.html","webpack:///src/app/user/user-profile/user-profile.component.ts","webpack:///src/app/user/user-profile/user-profile.component.html","webpack:///src/app/user/user.component.ts","webpack:///src/app/user/user.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","httpOptions","headers","CompanyService","http","post","baseUrl","JSON","stringify","companyname","turnover","ceo","bod","sexchange","sector","brief","stockcode","value","providedIn","ALERTS","AddComponent","routeInfo","router","companyservice","dictsinfo","reset","getStockExchange","stockcodelist","getMockStockCode","sectorslist","getMockSectorsList","validInput","setCompanyInfo","subscribe","data","console","log","info","navigate","alerts","push","type","message","Array","from","alert","splice","indexOf","ngSaveComapny","EditComponent","companyid","snapshot","params","companys","getComppanyInfo","COMPANY","name","price","ListComponent","getAllCompanyList","getCompanyById","DashboadComponent","sessionStorage","getItem","isRole","loginuser","DictsinfoService","sectorname","stockexchange","date","time","totalnumber","units","opendate","remarks","condition1","companycode","startdate","enddate","condition2","company1","company2","FooterComponent","ImportstockComponent","httpclient","fileData","reportProgress","observe","upload","IpoplanService","totalnum","DetailComponent","ipoplanservice","ipoid","ipodetail","getIPOInfo","setIPO","ngSaveIPO","IpoplanComponent","dictinfo","ipoplans","getMockIPOList","LoginGuard","LoginComponent","unit","route","username","setItem","password","onSubmit","MoneyPipe","floats","toFixed","isNaN","NavbarComponent","isSignin","removeItem","StrockpriceComponent","isDisplay","prices","getMockStockPrice","options","xAxis","yAxis","series","itemStyle","color","barBorderRadius","barWidth","barCategoryGap","getCompanyList","Unit","user","UserService","usertype","email","mobile","SignupComponent","userservice","getUserType","signup","confirmpwd","ngSignup","UserPasswordComponent","userInfo","userid","setUserPwd","cfmpassword","updateUserPwd","UserProfileComponent","getUserInfo","setUserInfo","updateUserProfile","GUEST","UserComponent","users","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { ListComponent } from './company/list/list.component';\nimport { EditComponent } from './company/edit/edit.component';\nimport { AddComponent } from './company/add/add/add.component';\nimport { UserComponent } from './user/user.component';\nimport { UserProfileComponent } from './user/user-profile/user-profile.component';\nimport { ImportstockComponent } from './importstock/importstock.component';\nimport { UserPasswordComponent } from './user/user-password/user-password.component';\nimport { IpoplanComponent } from './ipoplan/ipoplan.component';\nimport { DetailComponent } from './ipoplan/detail/detail.component';\nimport { StrockpriceComponent } from './strockprice/strockprice.component';\nimport { LoginGuard } from '../app/login.guard';\nimport { DashboadComponent } from '../app/dash/dashboad/dashboad.component';\nimport { SignupComponent} from '../app/user/signup/signup.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent},\n  { path: 'dashboad', component: DashboadComponent, canActivate: [LoginGuard]},\n  { path: 'addcompany', component: AddComponent, canActivate: [LoginGuard]},\n  { path: 'companyedit/:id', component: EditComponent, canActivate: [LoginGuard]},\n  { path: 'companylist', component: ListComponent, canActivate: [LoginGuard]},\n  { path: 'userlist', component: UserComponent, canActivate: [LoginGuard]},\n  { path: 'signup', component: SignupComponent, canActivate: [LoginGuard]},\n  { path: 'userprofile/:id', component: UserProfileComponent, canActivate: [LoginGuard]},\n  { path: 'changepwd/:id', component: UserPasswordComponent, canActivate: [LoginGuard]},\n  { path: 'ipoplan', component: IpoplanComponent, canActivate: [LoginGuard]},\n  { path: 'ipodetail/:id', component: DetailComponent, canActivate: [LoginGuard]},\n  { path: 'importstock', component: ImportstockComponent, canActivate: [LoginGuard]},\n  { path: 'stockprice', component: StrockpriceComponent, canActivate: [LoginGuard]},\n  { path: 'companysearch:query', component: StrockpriceComponent, canActivate: [LoginGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","/*\n * @Author: your name\n * @Date: 2020-04-12 20:51:40\n * @LastEditTime: 2020-04-19 19:38:23\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\app.component.ts\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent {\n  title = 'fullstack-angular stock';\n}\n","<!--\n * @Author:\n * @Date: 2020-04-12 20:51:40\n * @LastEditTime: 2020-04-19 19:51:46\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\app.component.html\n -->\n<app-navbar></app-navbar>\n\n<div class=\"container div-main\">\n  <div class=\"row\">\n    <div class=\"offset-1 col-md-10\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n\n<app-footer></app-footer>\n\n","/*\n * @Author: Sammi Liu\n * @Date: 2020-04-12 20:51:40\n * @LastEditTime: 2020-04-21 11:26:35\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\app.module.ts\n */\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport {NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { NgxEchartsModule} from 'ngx-echarts';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './user/user.component';\nimport { LoginComponent } from './login/login.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { ListComponent } from './company/list/list.component';\nimport { EditComponent } from './company/edit/edit.component';\nimport { MoneyPipe } from './money.pipe';\nimport { UserProfileComponent } from './user/user-profile/user-profile.component';\nimport { ImportstockComponent } from './importstock/importstock.component';\nimport { UserPasswordComponent } from './user/user-password/user-password.component';\nimport { IpoplanComponent } from './ipoplan/ipoplan.component';\nimport { StrockpriceComponent } from './strockprice/strockprice.component';\nimport { DashboadComponent } from './dash/dashboad/dashboad.component';\nimport { AddComponent } from './company/add/add/add.component';\nimport { DetailComponent } from './ipoplan/detail/detail.component';\nimport { SignupComponent } from './user/signup/signup.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    LoginComponent,\n    NavbarComponent,\n    FooterComponent,\n    ListComponent,\n    EditComponent,\n    MoneyPipe,\n    UserProfileComponent,\n    ImportstockComponent,\n    UserPasswordComponent,\n    IpoplanComponent,\n    StrockpriceComponent,\n    DashboadComponent,\n    AddComponent,\n    DetailComponent,\n    SignupComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    HttpClientModule,\n    NgxEchartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {environment} from '../environments/environment';\nimport { Observable } from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CompanyService {\n  id: string;\n  name: string;\n  turnover: string;\n  ceo: string;\n  bod: string;\n  sexchange: string;\n  price: number;\n  sector: string;\n  brief: string;\n  stockcode: string;\n\n  constructor(private http: HttpClient) { }\n\n  getAllCompanyList() {\n    return this.http.post(`${environment.baseUrl}/companylist`, JSON.stringify(''), httpOptions);\n  }\n\n  getComppanyInfo(id: string) {\n    return {\n      id: '1',\n      companyname:'Company001',\n      turnover: 'testdemo',\n      ceo: 'IBM-Learning',\n      bod: 'test demo data',\n      sexchange: 'NSE',\n      sector: '3',\n      brief: 'testssss',\n      stockcode: 'stockcode002'\n    };\n  }\n\n  setCompanyInfo(value: any) {\n    return this.http.post(`${environment.baseUrl}/companyaction`, JSON.stringify(value), httpOptions);\n  }\n\n  getCompanyList(value: any) {\n    return this.http.post(`${environment.baseUrl}/companylist`, JSON.stringify(value), httpOptions);\n  }\n\n  getCompanyById(id: any) {\n    return this.http.post(`${environment.baseUrl}/singlecompany`, JSON.stringify(id), httpOptions);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { CompanyService } from '../../../company.service';\nimport { DictsinfoService } from './../../../dictsinfo.service';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\n\ninterface Alert {\n  type: string;\n  message: string;\n}\n\nconst ALERTS: Alert[] = [];\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.css']\n})\n\nexport class AddComponent implements OnInit {\n\n  alerts : Alert[];\n\n  @Input() searchname: any;\n  @Input() searchdate: any;\n\n  constructor(private routeInfo: ActivatedRoute, private router:Router, private companyservice: CompanyService, public dictsinfo: DictsinfoService) {\n    this.reset();\n  }\n\n  sexchange: any;\n  stockcodelist: any;\n  sectorslist: any;\n\n  ngOnInit(): void {\n    this.sexchange = this.dictsinfo.getStockExchange();\n    this.stockcodelist = this.dictsinfo.getMockStockCode();\n    this.sectorslist = this.dictsinfo.getMockSectorsList();\n  }\n\n  ngSaveComapny(value: any) {\n    if (this.validInput(value)) {\n      this.companyservice.setCompanyInfo(value).subscribe(\n        data => {\n          console.log(JSON.stringify(data));\n          const info: any = data;\n          if (200 === info.code) {\n              console.log('create company info successful,redirect page...');\n              this.router.navigate(['/companylist']);\n          } else {\n            console.log('create company info failing.');\n            this.alerts.push({type : 'danger', message: 'please contact administrators!'});\n          }\n        }\n      );\n    }\n  }\n\n  reset(): void {\n    this.alerts = Array.from(ALERTS);\n  }\n\n  close(alert: Alert): void {\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\n  }\n\n  validInput(value: any): boolean {\n    if (!value.companyname) {\n      this.alerts.push({type : 'danger', message: 'companyname required!'});\n      return false;\n    }\n\n    return true;\n  }\n}\n","<div class=\"col-sm-12\" ngController=\"myCompany\">\n  <h3>New Company</h3>\n  <p *ngFor=\"let alert of alerts\">\n    <ngb-alert [type]=\"alert.type\" (close)=\"close(alert)\">{{ alert.message }}</ngb-alert>\n  </p>\n  <form class=\"form-horizontal\" #myForm=\"ngForm\" (ngSubmit)=\"ngSaveComapny(myForm.value)\" novalidate>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Company Name</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" class=\"form-control\" ngModel id=\"companyname\" name=\"companyname\" placeholder=\"type company name\"  required>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Turnover</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"type turnover\" ngModel id=\"turnover\" name=\"turnover\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">CEO</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"type CEO\" ngModel id=\"ceo\" name=\"ceo\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Board of Dirctores</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"type board of dirctores\" ngModel id=\"bod\" name=\"bod\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Stock Exchange</label>\n          <div class=\"col-sm-8\">\n              <select class=\"form-control\" ngModel id=\"stockexchange\" name=\"stockexchange\">\n                <option *ngFor=\"let sechang of sexchange\" [value]=\"sechang\">{{sechang}}</option>\n              </select>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Sectors</label>\n          <div class=\"col-sm-8\">\n            <select class=\"form-control\" ngModel id=\"sectors\" name=\"sectors\">\n              <option *ngFor=\"let sector of sectorslist\" [value]=\"sector.id\">{{sector.sectorname}}</option>\n            </select>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Brief</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" ngModel id=\"brief\" class=\"form-control\" placeholder=\"type brief\" name=\"brief\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Stock Code</label>\n          <div class=\"col-sm-8\">\n              <select class=\"form-control\" ngModel id=\"stockcode\" name=\"stockcode\">\n                <option *ngFor=\"let code of stockcodelist\" [value]=\"code\">{{code}}</option>\n              </select>\n          </div>\n      </div>\n      <div class=\"btn-toolbar\" role=\"toolbar\">\n          <div class=\"col-sm-offset-4 col-sm-8\">\n              <div class=\"btn-group\">\n                  <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n                  <button type=\"reset\" class=\"btn btn-secondary\">Reset</button>\n              </div>\n          </div>\n      </div>\n  </form>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { CompanyService } from '../../company.service';\nimport { DictsinfoService } from './../../dictsinfo.service';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\n\ninterface Alert {\n  type: string;\n  message: string;\n}\n\nconst ALERTS: Alert[] = [];\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  alerts : Alert[];\n\n  @Input() searchname: any;\n  @Input() searchdate: any;\n\n  constructor(private routeInfo: ActivatedRoute, private router:Router, private companyservice: CompanyService, public dictsinfo: DictsinfoService) {\n    this.reset();\n  }\n\n  companyid: string;\n  sexchange: any;\n  stockcodelist: any;\n  sectorslist: any;\n  companys: any;\n\n  ngOnInit(): void {\n    this.sexchange = this.dictsinfo.getStockExchange();\n    this.stockcodelist = this.dictsinfo.getMockStockCode();\n    this.sectorslist = this.dictsinfo.getMockSectorsList();\n\n    this.companyid = this.routeInfo.snapshot.params['id'];\n\n    this.companys = this.companyservice.getComppanyInfo(this.companyid);\n  }\n\n  ngSaveComapny(value: any) {\n    if (this.validInput(value)) {\n      this.companyservice.setCompanyInfo(value).subscribe(\n        data => {\n          console.log(JSON.stringify(data));\n          const info: any = data;\n          if (200 === info.code) {\n              console.log('modify company info successful,redirect page...');\n              this.router.navigate(['/companylist']);\n          } else {\n            console.log('modify company info failing.');\n            this.alerts.push({type : 'danger', message: 'please contact administrators!'});\n          }\n        }\n      );\n    }\n  }\n\n  reset(): void {\n    this.alerts = Array.from(ALERTS);\n  }\n\n  close(alert: Alert): void {\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\n  }\n\n  validInput(value: any): boolean {\n    if (!value.companyname) {\n      this.alerts.push({type : 'danger', message: 'companyname required!'});\n      return false;\n    }\n\n    return true;\n  }\n}\n","<div class=\"col-sm-12\" ngController=\"myCompany\">\n  <h3>Company Edit</h3>\n  <p *ngFor=\"let alert of alerts\">\n    <ngb-alert [type]=\"alert.type\" (close)=\"close(alert)\">{{ alert.message }}</ngb-alert>\n  </p>\n  <form class=\"form-horizontal\" #myForm=\"ngForm\" (ngSubmit)=\"ngSaveComapny(myForm.value)\" novalidate>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Company Name</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" class=\"form-control\" ngModel id=\"companyname\" name=\"companyname\" placeholder=\"type company name\"  [(ngModel)]=\"companys.companyname\" required>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Turnover</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"type turnover\" ngModel id=\"turnover\" name=\"turnover\" [(ngModel)]=\"companys.turnover\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">CEO</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"type CEO\" ngModel id=\"ceo\" name=\"ceo\" [(ngModel)]=\"companys.ceo\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Board of Dirctores</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"type board of dirctores\" ngModel id=\"bod\" name=\"bod\" [(ngModel)]=\"companys.bod\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Stock Exchange</label>\n          <div class=\"col-sm-8\">\n              <select class=\"form-control\" ngModel id=\"stockexchange\" [(ngModel)]=\"companys.sexchange\" name=\"stockexchange\">\n                <option *ngFor=\"let sechang of sexchange\" [value]=\"sechang\" [selected]=\"sechang===companys.sexchange\">{{sechang}}</option>\n              </select>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Sectors</label>\n          <div class=\"col-sm-8\">\n            <select class=\"form-control\" ngModel id=\"sectors\" [(ngModel)]=\"companys.sector\" name=\"sectors\">\n              <option *ngFor=\"let sector of sectorslist\" [value]=\"sector.id\" [selected]=\"sector.id===companys.sector\">{{sector.sectorname}}</option>\n            </select>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Brief</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" ngModel id=\"brief\" class=\"form-control\" placeholder=\"type brief\" name=\"brief\" [(ngModel)]=\"companys.brief\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Stock Code</label>\n          <div class=\"col-sm-8\">\n              <select class=\"form-control\" ngModel id=\"stockcode\" [(ngModel)]=\"companys.stockcode\" name=\"stockcode\">\n                <option *ngFor=\"let code of stockcodelist\" [value]=\"code\" [selected]=\"code===companys.stockcode\">{{code}}</option>\n              </select>\n          </div>\n      </div>\n      <div class=\"btn-toolbar\" role=\"toolbar\">\n          <div class=\"col-sm-offset-4 col-sm-8\">\n              <div class=\"btn-group\">\n                  <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n                  <button type=\"reset\" class=\"btn btn-secondary\">Reset</button>\n              </div>\n          </div>\n      </div>\n  </form>\n</div>\n","/*\n * @Author: your name\n * @Date: 2020-04-20 14:26:57\n * @LastEditTime: 2020-04-24 16:50:36\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\company\\list\\list.component.ts\n */\nimport { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { CompanyService } from '../../company.service';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\n\ninterface CompanyItem {\n  id: string;\n  name: string;\n  turnover: string;\n  ceo: string;\n  bod: string;\n  sexchange: string;\n  price: number;\n  sector: string;\n  brief: string;\n  stockcode: string;\n}\n\nconst COMPANY: CompanyItem[] = [{\n  id: '1',\n  name: 'company001',\n  turnover: 'test',\n  ceo: 'testceo',\n  bod: 'Board of Dirctors 001',\n  sexchange: 'BSE',\n  price: 23.9,\n  sector: 'sectors test1',\n  brief: 'brief write up tes 1',\n  stockcode: 'stock0001'\n}, {\n  id: '2',\n  name: 'company002',\n  turnover: 'test',\n  ceo: 'testceo',\n  bod: 'Board of Dirctors 002',\n  sexchange: 'NSE',\n  price: 23.9,\n  sector: 'sectors test2',\n  brief: 'brief write up tes 2',\n  stockcode: 'stock0002'\n}\n];\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n\n\n  constructor(private companyservice: CompanyService, private router:Router) { }\n\n  companys: CompanyItem[];\n\n  ngOnInit(): void {\n    this.companys = COMPANY;\n    // this.getAllCompanyList();\n  }\n\n  getAllCompanyList() {\n    this.companyservice.getAllCompanyList().subscribe(\n      data => {\n        console.log(JSON.stringify(data));\n        const info: any = data;\n        if (200 === info.code) {\n            console.log('company list successful,redirect page...');\n            this.router.navigate(['/companylist']);\n        } else {\n          console.log('modify company info failing.');\n        }\n      }\n    );\n\n  }\n\n  getSingleCompany(id: any) {\n    this.companyservice.getCompanyById(id).subscribe(\n      data => {\n        console.log(JSON.stringify(data));\n        const info: any = data;\n        if (200 === info.code) {\n            console.log('company single info successful,redirect page...');\n        } else {\n          console.log('modify company info failing.');\n        }\n      }\n    );\n  }\n\n\n}\n","<div class=\"container\" ngController=\"myCompany\">\n  <div class=\"row\">\n      <div class=\"col-sm-12\">\n          <h3>Company List</h3>\n          <table class=\"table table-striped table-bordered table-hover table-condensed\">\n              <thead>\n              <tr>\n                  <th>Company Name</th>\n                  <th>Stock Exchange</th>\n                  <th>Turnover</th>\n                  <th>Brief</th>\n                  <th>operation</th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr *ngFor=\"let company of companys\" >\n                  <td>{{ company.name }}</td>\n                  <td>{{ company.sexchange }}</td>\n                  <td>{{ company.turnover }}</td>\n                  <td>{{ company.brief }}</td>\n                  <td><a [routerLink]=\"['/companyedit', company.id]\">View Company</a></td>\n              </tr>\n              </tbody>\n          </table>\n\n      </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-dashboad',\n  templateUrl: './dashboad.component.html',\n  styleUrls: ['./dashboad.component.css']\n})\nexport class DashboadComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  isRole: boolean;\n  loginuser: string;\n\n  ngOnInit(): void {\n    if (sessionStorage.getItem('token') === 'admin'){\n      this.isRole = true;\n    } else {\n      this.isRole = false;\n    }\n    this.loginuser = sessionStorage.getItem('loginuser');\n  }\n\n}\n","<div *ngIf=\"isRole\" class=\"container\">\n  <h3>Admin Dashboad</h3>\n  <div class=\"row\">\n      <div class=\"col-sm-8\">\n          <ul class=\"nav-item active\">\n              <li>\n                <a class=\"nav-link\" href [routerLink]=\"['/addcompany']\">Add Company</a>\n              </li>\n              <li>\n                <a class=\"nav-link\" href [routerLink]=\"['/companylist']\">Company List</a>\n              </li>\n              <li>\n                <a class=\"nav-link\" href [routerLink]=\"['/importstock']\">Import Data</a>\n              </li>\n              <li>\n                <a class=\"nav-link\" href [routerLink]=\"['/stockprice']\">Stock List</a>\n              </li>\n              <li>\n                <a class=\"nav-link\" href [routerLink]=\"['/ipoplan']\">IPO List</a>\n              </li>\n          </ul>\n      </div>\n  </div>\n</div>\n\n<div *ngIf=\"!isRole\" class=\"container\">\n  <h3>User Dashboad</h3>\n  <div class=\"row\">\n    <div class=\"col-sm-8\">\n      <ul class=\"nav-item active\">\n        <li>\n          <a class=\"nav-link\" href [routerLink]=\"['/signup']\">Signup</a>\n        </li>\n        <li>\n          <a class=\"nav-link\" href [routerLink]=\"['/userprofile', loginuser]\">User Profile</a>\n        </li>\n        <li>\n          <a class=\"nav-link\" href [routerLink]=\"['/changepwd', loginuser]\">Change Password</a>\n        </li>\n        <li>\n          <a class=\"nav-link\" href [routerLink]=\"['/stockprice']\">Stock List</a>\n        </li>\n        <li>\n          <a class=\"nav-link\" href [routerLink]=\"['/ipoplan']\">IPO List</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n","/*\n * @Author: your name\n * @Date: 2020-04-21 20:29:04\n * @LastEditTime: 2020-04-23 14:54:01\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\dictsinfo.service.ts\n */\nimport { Injectable, OnInit } from '@angular/core';\nimport { stringify } from 'querystring';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DictsinfoService {\n\n  constructor() { }\n\n  getStockExchange() : any {\n    return ['BSE', 'NSE'];\n  }\n\n  getMockStockCode(): any {\n    return ['stockcode001', 'stockcode002', 'stockcode003'];\n  }\n\n  getUserType(): any {\n    return ['Admin', 'User'];\n  }\n\n  getMockSectorsList(): any {\n    return [{\n      id:'1',\n      sectorname: 'sn001',\n      brief: 'test001'\n    },{\n      id:'2',\n      sectorname: 'sn002',\n      brief: 'test002'\n    },{\n      id:'3',\n      sectorname: 'sn003',\n      brief: 'test003'\n    },{\n      id:'4',\n      sectorname: 'sn004',\n      brief: 'test004'\n    }\n    ];\n  }\n\n  getMockStockPrice(): any {\n    return [{\n      id:'1',\n      companyname: 'company001',\n      stockexchange: 'BSE',\n      price: 44.12,\n      date: '2020-07-28',\n      time: '13:00'\n    },{\n      id:'2',\n      companyname: 'company002',\n      stockexchange: 'NSE',\n      price: 23.1,\n      date: '2020-07-28',\n      time: '13:00'\n    },{\n      id:'3',\n      companyname: 'company003',\n      stockexchange: 'NSE',\n      price: 78.1,\n      date: '2020-07-28',\n      time: '13:00'\n    },{\n      id:'4',\n      companyname: 'company004',\n      stockexchange: 'BSE',\n      price: 12.4,\n      date: '2020-07-28',\n      time: '13:00'\n    }\n    ];\n  }\n\n  getMockIPOList(): any {\n    return [{\n      id:'1',\n      companyname: 'company001',\n      stockexchange: 'BSE',\n      price: 44.12,\n      totalnumber: 100000,\n      units: '手',\n      opendate: '2020-07-28',\n      remarks: 'test001'\n    },{\n      id:'2',\n      companyname: 'company002',\n      stockexchange: 'NSE',\n      price: 23.1,\n      totalnumber: 100000,\n      units: '手',\n      opendate: '2020-07-20',\n      remarks: 'test002'\n    },{\n      id:'3',\n      companyname: 'company003',\n      stockexchange: 'NSE',\n      price: 78.1,\n      totalnumber: 100000,\n      units: '手',\n      opendate: '2020-08-28',\n      remarks: 'test003'\n    },{\n      id:'4',\n      companyname: 'company004',\n      stockexchange: 'BSE',\n      price: 12.4,\n      totalnumber: 100000,\n      units: '手',\n      opendate: '2020-09-08',\n      remarks: 'test004'\n    }\n    ];\n  }\n\n  getSearchJson(): any {\n    return [{\n      condition1: {\n        companycode: '*',\n        startdate: '****-**-**',\n        enddate: '****-**-**'\n      },\n      condition2: {\n        date: '****-**-**',\n        company1: '*',\n        company2: '*'\n      }\n    }];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!--\n * @Author: your name\n * @Date: 2020-04-18 20:42:48\n * @LastEditTime: 2020-04-20 13:40:32\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\footer\\footer.component.html\n -->\n<footer class=\"footer navbar-fixed-bottom \">\n  <div class=\"container\">\n    <a href=\"https://techademy.in/app/home\" target=\"_blank\">FSD IBM Learning</a> |\n    <a href=\"https://spring.io/guides\" target=\"_blank\">Spring Guide</a> |\n    <a href=\"https://angular.io/docs\" target=\"_blank\">Angular Guide</a>\n  </div>\n</footer>\n","import { Injectable } from '@angular/core';\n/*\n * @Author: your name\n * @Date: 2020-04-21 18:08:47\n * @LastEditTime: 2020-04-24 17:13:36\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\importstock\\importstock.component.ts\n */\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpErrorResponse, HttpEventType } from  '@angular/common/http';\nimport { map } from  'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n@Component({\n  selector: 'app-importstock',\n  templateUrl: './importstock.component.html',\n  styleUrls: ['./importstock.component.css']\n})\nexport class ImportstockComponent implements OnInit {\n\n  constructor(private httpclient: HttpClient) { }\n\n  ngOnInit(): void {\n  }\n\n  upload(fileData): any {\n    return this.httpclient.post<any>(\"C:\\sammi\\fullstack\", fileData, {\n      reportProgress: true,\n      observe: 'events'\n    });\n\n  }\n\n}\n","<!--\n * @Author: your name\n * @Date: 2020-04-21 18:08:47\n * @LastEditTime: 2020-04-26 09:30:30\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\importstock\\importstock.component.html\n -->\n<div class=\"col-sm-12\" ngController=\"myUser\">\n  <form class=\"form-horizontal\" #myForm=\"ngForm\" method=\"POST\" (ngSubmit)=\"upload(myForm.value)\" novalidate>\n      <span><a href = \"../../assets/import/sample_stock_data.xlsx\">Download Stock Price Demo File</a></span>\n      <div class=\"form-group\">\n          <label class=\"col-sm-2 control-label\">Stock File</label>\n          <div class=\"col-sm-8\">\n              <input type=\"file\" class=\"form-control\" name=\"uploadfile\" id=\"uploadfile\" ngModel>\n          </div>\n      </div>\n      <div class=\"btn-toolbar\" role=\"toolbar\">\n          <div class=\"col-sm-offset-2 col-sm-4\">\n              <div class=\"btn-group\">\n                  <button type=\"submit\" class=\"btn btn-primary\">Import</button>\n              </div>\n          </div>\n      </div>\n  </form>\n</div>\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {environment} from '../environments/environment';\nimport { Observable } from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class IpoplanService {\n  id: string;\n  companyname: string;\n  sexchange: string;\n  price: number;\n  totalnum: number;\n  opendate: string;\n  remarks: string;\n\n  constructor(private http: HttpClient) { }\n\n  getAllIPOList() {\n    return this.http.post(`${environment.baseUrl}/ipoplan`, JSON.stringify(''), httpOptions);\n  }\n\n  getIPOInfo(id: string) {\n    return {\n      id: '1',\n      companyname:'Company001',\n      sexchange: 'NSE',\n      price: 32.29,\n      totalnum: 39999,\n      opendate: '2020-06-09',\n      remarks: 'demo'\n    };\n  }\n\n  setIPO(value: any) {\n    return this.http.post(`${environment.baseUrl}/ipoaction`, JSON.stringify(value), httpOptions);\n  }\n\n  getIPOList(value: any) {\n    return this.http.post(`${environment.baseUrl}/ipoplan`, JSON.stringify(value), httpOptions);\n  }\n\n  getIPOInfoById(id: any) {\n    return this.http.post(`${environment.baseUrl}/doipo`, JSON.stringify(id), httpOptions);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { IpoplanService } from '../../ipoplan.service';\nimport { DictsinfoService } from './../../dictsinfo.service';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\n\ninterface Alert {\n  type: string;\n  message: string;\n}\n\nconst ALERTS: Alert[] = [];\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.css']\n})\nexport class DetailComponent implements OnInit {\n\n  alerts : Alert[];\n\n  constructor(private routeInfo: ActivatedRoute, private router:Router, private ipoplanservice: IpoplanService, public dictsinfo: DictsinfoService) {\n    this.reset();\n  }\n  sexchange: any;\n  ipoid: string;\n  ipodetail: any;\n\n  ngOnInit(): void {\n    this.sexchange = this.dictsinfo.getStockExchange();\n\n    this.ipoid = this.routeInfo.snapshot.params['id'];\n\n    this.ipodetail = this.ipoplanservice.getIPOInfo(this.ipoid);\n  }\n\n  ngSaveIPO(value: any) {\n    if (this.validInput(value)) {\n      this.ipoplanservice.setIPO(value).subscribe(\n        data => {\n          console.log(JSON.stringify(data));\n          const info: any = data;\n          if (200 === info.code) {\n              console.log('modify company info successful,redirect page...');\n              this.router.navigate(['/ipoplan']);\n          } else {\n            console.log('modify company info failing.');\n            this.alerts.push({type : 'danger', message: 'please contact administrators!'});\n          }\n        }\n      );\n    }\n  }\n\n  reset(): void {\n    this.alerts = Array.from(ALERTS);\n  }\n\n  close(alert: Alert): void {\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\n  }\n\n  validInput(value: any): boolean {\n    if (!value.companyname) {\n      this.alerts.push({type : 'danger', message: 'companyname required!'});\n      return false;\n    }\n\n    return true;\n  }\n\n}\n","<div class=\"col-sm-12\" ngController=\"myIPO\">\n  <h3>Edit IPO</h3>\n  <p *ngFor=\"let alert of alerts\">\n    <ngb-alert [type]=\"alert.type\" (close)=\"close(alert)\">{{ alert.message }}</ngb-alert>\n  </p>\n  <form class=\"form-horizontal\" #myForm=\"ngForm\" (ngSubmit)=\"ngSaveIPO(myForm.value)\" novalidate>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Company Name</label>\n          <div class=\"col-sm-8\">\n            <input type=\"text\" class=\"form-control\" ngModel id=\"companyname\" name=\"companyname\" placeholder=\"type company name\" [(ngModel)]=\"ipodetail.companyname\" required>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Stock Exchange</label>\n          <div class=\"col-sm-8\">\n            <select class=\"form-control\" ngModel id=\"stockexchange\" [(ngModel)]=\"ipodetail.sexchange\" name=\"stockexchange\">\n              <option *ngFor=\"let sechang of sexchange\" [value]=\"sechang\" [selected]=\"sechang===ipodetail.sexchange\">{{sechang}}</option>\n            </select>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Price</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" ngModel class=\"form-control\" name=\"price\" placeholder=\"type price\" [(ngModel)]=\"ipodetail.price\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Total Number</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" ngModel class=\"form-control\" name=\"totalnumber\" placeholder=\"type total number\" [(ngModel)]=\"ipodetail.totalnum\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Open Date</label>\n          <div class=\"col-sm-8\">\n              <input type=\"date\" ngModel class=\"form-control\" name=\"opendate\" placeholder=\"type open date\" [(ngModel)]=\"ipodetail.opendate\">\n          </div>\n      </div>\n\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Remarks</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" ngModel class=\"form-control\" name=\"remarks\" placeholder=\"type remarks\" [(ngModel)]=\"ipodetail.remarks\">\n          </div>\n      </div>\n      <div class=\"btn-toolbar\" role=\"toolbar\">\n          <div class=\"col-sm-offset-4 col-sm-8\">\n              <div class=\"btn-group\">\n                  <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n                  <button type=\"reset\" class=\"btn btn-secondary\">Reset</button>\n              </div>\n          </div>\n      </div>\n  </form>\n</div>\n","/*\n * @Author: your name\n * @Date: 2020-04-22 14:52:52\n * @LastEditTime: 2020-04-22 16:20:14\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\ipoplan\\ipoplan.component.ts\n */\nimport { DictsinfoService } from './../dictsinfo.service';\nimport { Component, OnInit } from '@angular/core';\n@Component({\n  selector: 'app-ipoplan',\n  templateUrl: './ipoplan.component.html',\n  styleUrls: ['./ipoplan.component.css']\n})\nexport class IpoplanComponent implements OnInit {\n\n  constructor(public dictinfo: DictsinfoService) { }\n\n  ipoplans : any;\n  ngOnInit(): void {\n    this.ipoplans = this.dictinfo.getMockIPOList();\n  }\n\n}\n","<!--\n * @Author: your name\n * @Date: 2020-04-22 14:52:52\n * @LastEditTime: 2020-04-22 16:30:00\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\ipoplan\\ipoplan.component.html\n -->\n<div class=\"col-sm-12\">\n  <h3>IPO Plan List</h3>\n  <table class=\"table table-striped table-bordered table-hover table-condensed\">\n      <thead>\n      <tr>\n          <th>Company Name</th>\n          <th>Stock Exchange</th>\n          <th>Price</th>\n          <th>Total Number</th>\n          <th>Open Date</th>\n          <th>Remarks</th>\n      </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let ipo of ipoplans\">\n          <td><a class=\"nav-link\" href [routerLink]=\"['/ipodetail', ipo.id]\">{{ ipo.companyname }}</a></td>\n          <td>{{ ipo.stockexchange }}</td>\n          <td>{{ ipo.price | money }}</td>\n          <td>{{ ipo.totalnumber | number }}</td>\n          <td>{{ ipo.opendate }}</td>\n          <td>{{ ipo.remarks }}</td>\n      </tr>\n      </tbody>\n  </table>\n</div>\n","import { Injectable } from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginGuard implements CanActivate {\n\n  constructor(private router: Router) {\n  }\n\n  canActivate() {\n    if (!sessionStorage.getItem('token')) {\n      alert('Please Sign in')\n      return false;\n    } else{\n      return true;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Unit } from '../unit';\nimport { Router } from '@angular/router';\n\ninterface Alert {\n  type: string;\n  message: string;\n}\n\nconst ALERTS: Alert[] = [];\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  alerts : Alert[];\n\n  constructor(private unit: Unit, private route: Router) {\n    this.reset();\n   }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(value: any) {\n    if (this.validInput(value)) {\n      // this.unit.postSignIn(value).subscribe(\n      //   data => {\n      //     console.log(JSON.stringify(data));\n      //     const info: any = data;\n      //     if (200 === info.code) {\n      //         console.log('login successful,redirect page...');\n      //         this.route.navigate(['/adminlist']);\n      //     } else {\n      //       console.log('login failing.');\n      //       this.alerts.push({type : 'danger', message: 'username or password error!'});\n\n      //     }\n      //   }\n      // );\n      if (value.username === 'admin') {\n        sessionStorage.setItem('token', 'admin');\n      } else {\n        sessionStorage.setItem('token', 'seller');\n      }\n      sessionStorage.setItem('loginuser','1');\n      this.route.navigate(['/dashboad']);\n    }\n  }\n\n  reset(): void {\n    this.alerts = Array.from(ALERTS);\n  }\n\n  close(alert: Alert): void {\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\n  }\n\n  validInput(value: any): boolean {\n    this.reset();\n    if (!value.username) {\n      this.alerts.push({type : 'danger', message: 'username required!'});\n      return false;\n    }\n\n    if (!value.password) {\n      this.alerts.push({type : 'danger', message: 'password required!'});\n      return false;\n    }\n\n    return true;\n  }\n\n}\n","<div class=\"container div-signin\" ngController=\"myUser\">\n  <form class=\"form-signin form-horizontal\" method=\"POST\" #loginForm=\"ngForm\" (ngSubmit)=\"onSubmit(loginForm.value)\" novalidate>\n    <h1 class=\"h3 mb-3 font-weight-normal\">Please sign in</h1>\n\n    <p *ngFor=\"let alert of alerts\">\n      <ngb-alert [type]=\"alert.type\" (close)=\"close(alert)\">{{ alert.message }}</ngb-alert>\n    </p>\n    <div class=\"form-group\">\n      <label class=\"col-sm-2 control-label\">Username</label>\n      <div class=\"col-sm-4\">\n        <input ngModel name=\"username\" id=\"username\" class=\"form-control\" placeholder=\"UserName\" type=\"text\">\n      </div>\n  </div>\n  <div class=\"form-group\">\n    <label class=\"col-sm-2 control-label\">Password</label>\n    <div class=\"col-sm-4\">\n      <input ngModel name=\"password\" type=\"password\" id=\"password\" class=\"form-control\" placeholder=\"Password\">\n    </div>\n  </div>\n    <div class=\"checkbox mb-3\">\n      <label>\n        <input type=\"checkbox\" ngModel value=\"remember-me\" name=\"saveme\"> Remember Me\n      </label>\n    </div>\n    <div class=\"btn-toolbar\" role=\"toolbar\">\n      <div class=\"col-sm-offset-2 col-sm-4\">\n          <div class=\"btn-group\">\n            <button class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">Login</button>\n          </div>\n      </div>\n    </div>\n  </form>\n</div>\n","/*\n * @Author: your name\n * @Date: 2020-04-21 16:03:00\n * @LastEditTime: 2020-04-21 20:24:27\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\money.pipe.ts\n */\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'money'\n})\nexport class MoneyPipe implements PipeTransform {\n\n  transform(value: number, floats?: number): string {\n    return value.toFixed(isNaN(floats) ? 2 : floats);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Unit} from '../unit';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor(private router: Router, private routeInfo: ActivatedRoute) { }\n\n   isSignin: boolean;\n   isRole: boolean;\n   loginuser: string;\n\n  ngOnInit(): void {\n    if (sessionStorage.getItem('token')){\n      if (sessionStorage.getItem('token') === 'admin'){\n        this.isRole = true;\n      } else {\n        this.isRole = false;\n      }\n      this.isSignin = true;\n      this.loginuser = sessionStorage.getItem('loginuser');\n    } else {\n      this.isSignin = false;\n    }\n  }\n\n  ngDoCheck(): void {\n    console.log('docheck');\n    if (sessionStorage.getItem('token')){\n      this.isSignin = true;\n    } else {\n      this.isSignin = false;\n    }\n  }\n\n  signOut() {\n    sessionStorage.removeItem('token');\n    sessionStorage.removeItem('loginuser');\n    this.router.navigate(['/login']);\n  }\n}\n\n","<!--\n * @Author: your name\n * @Date: 2020-04-18 20:42:34\n * @LastEditTime: 2020-04-23 14:58:37\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\navbar\\navbar.component.html\n -->\n<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark navbar-fixed-top\">\n  <a class=\"navbar-brand\" href=\"#\">Stock</a>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarCollapse\">\n    <ul *ngIf=\"isRole\" class=\"navbar-nav mr-auto\">\n      <li *ngIf=\"!isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/login']\">Home</a>\n      </li>\n      <li *ngIf=\"isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/dashboad']\">Dashboad</a>\n      </li>\n      <li *ngIf=\"isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/companylist']\">Company List</a>\n      </li>\n      <li *ngIf=\"isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/ipoplan']\">IPO List</a>\n      </li>\n      <li *ngIf=\"isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/importstock']\">Import Data</a>\n      </li>\n      <li *ngIf=\"isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/stockprice']\">Stock Price</a>\n      </li>\n    </ul>\n    <ul *ngIf=\"!isRole\" class=\"navbar-nav mr-auto\">\n      <li *ngIf=\"!isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/login']\">Home</a>\n      </li>\n      <li *ngIf=\"isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/dashboad']\">Dashboad</a>\n      </li>\n      <li *ngIf=\"isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/signup']\">Signup</a>\n      </li>\n      <li *ngIf=\"isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/changepwd',loginuser]\">Change Password</a>\n      </li>\n      <li *ngIf=\"isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/userprofile',loginuser]\">User Profile</a>\n      </li>\n      <li *ngIf=\"isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/ipoplan']\">IPO List</a>\n      </li>\n      <li *ngIf=\"isSignin\" class=\"nav-item active\">\n        <a class=\"nav-link\" href [routerLink]=\"['/stockprice']\">Stock Price</a>\n      </li>\n    </ul>\n    <form class=\"form-inline mt-2 mt-md-0\">\n      <button *ngIf=\"!isSignin\" class=\"btn btn-outline-primary\" type=\"submit\" [routerLink]=\"['/login']\">Login</button>\n      <button *ngIf=\"isSignin\" class=\"btn btn-outline-secondary\" type=\"submit\" (click)=\"signOut()\">LogOut</button>\n    </form>\n  </div>\n</nav>\n","import { DictsinfoService } from './../dictsinfo.service';\n/*\n * @Author: your name\n * @Date: 2020-04-23 14:48:06\n * @LastEditTime: 2020-04-23 14:56:08\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\strockprice\\strockprice.component.ts\n */\nimport { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { CompanyService } from '../company.service';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\n\n@Component({\n  selector: 'app-strockprice',\n  templateUrl: './strockprice.component.html',\n  styleUrls: ['./strockprice.component.css']\n})\nexport class StrockpriceComponent implements OnInit {\n\n  prices: any;\n  options: any;\n  isDisplay: boolean;\n\n  constructor(public dictinfo: DictsinfoService,private router:Router,private companyservice: CompanyService) {\n    this.isDisplay = false;\n  }\n\n  ngOnInit(): void {\n    this.prices = this.dictinfo.getMockStockPrice();\n\n    this.options = {\n      xAxis: {\n          type: 'category',\n          data: ['Company001', 'Company002']\n      },\n      yAxis: {\n          type: 'value',\n          data: [5,400]\n      },\n      series: [{\n          itemStyle: {\n            color: 'blue',\n            barBorderRadius: [18, 18, 0 ,0]\n          },\n          barWidth: 40,\n          barCategoryGap: '20%',\n          data: [40, 100],\n          type: 'bar'\n      }]\n  };\n  }\n\n  getCompanyList(value: any) {\n    this.companyservice.getCompanyList(value).subscribe(\n      data => {\n        console.log(JSON.stringify(data));\n        const info: any = data;\n        if (200 === info.code) {\n            console.log('company list successful,redirect page...');\n            this.router.navigate(['/companylist']);\n        } else {\n          console.log('modify company info failing.');\n        }\n      }\n    );\n  }\n\n\n  showCompanyCharts(): void {\n    this.isDisplay = !this.isDisplay;\n  }\n\n}\n","<div class=\"col-sm-12\">\n  <h3>Search Stock Price List</h3>\n  <form class=\"form-horizontal\" #myForm=\"ngForm\" (ngSubmit)=\"getCompanyList(myForm.value)\" novalidate>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Company A</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" ngModel id=\"companya\" name=\"companya\" class=\"form-control\" placeholder=\"type company name\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Company B</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" class=\"form-control\" ngModel id=\"companyb\" name=\"companyb\" placeholder=\"type company name\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">From Date</label>\n          <div class=\"col-sm-8\">\n              <input type=\"date\" class=\"form-control\" ngModel id=\"date1\" name=\"date1\" placeholder=\"type start date\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">End Date</label>\n          <div class=\"col-sm-8\">\n              <input type=\"date\" class=\"form-control\" ngModel id=\"date2\" name=\"date2\" placeholder=\"type end date\">\n          </div>\n      </div>\n      <div class=\"btn-toolbar\" role=\"toolbar\">\n          <div class=\"col-sm-offset-4 col-sm-8\">\n              <div class=\"btn-group\">\n                  <button type=\"submit\" class=\"btn btn-primary\">Search</button>\n                  <button type=\"reset\" class=\"btn btn-secondary\">Clean</button>\n              </div>\n          </div>\n      </div>\n  </form>\n  <div class=\"row\">\n    <table class=\"table table-striped table-bordered table-hover table-condensed\">\n        <thead>\n        <tr>\n            <th>Company Name</th>\n            <th>Stock Exchange</th>\n            <th>Price</th>\n            <th>Date</th>\n            <th>&nbsp;&nbsp;</th>\n        </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let pri of prices\">\n            <td>{{ pri.companyname }}</td>\n            <td>{{ pri.stockexchange }}</td>\n            <td>{{ pri.price | money }}</td>\n            <td>{{ pri.date }}</td>\n            <td><a ngModel (click)=\"showCompanyCharts()\">View Chart</a></td>\n        </tr>\n        </tbody>\n    </table>\n  </div>\n  <div [hidden]=\"!isDisplay\" echarts [options]=\"options\" width=\"600\" height=\"300\"></div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from '../environments/environment';\nimport { UserService } from '../app/user';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class Unit {\n\n  constructor(private http: HttpClient) { }\n\n  public get currentUserToken(): string {\n    return sessionStorage.getItem('token');\n  }\n\n  postSignIn(user) {\n    return this.http.post(`${environment.baseUrl}/login`, JSON.stringify(user), httpOptions);\n  }\n}\n\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {environment} from '../environments/environment';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class UserService {\r\n  id: string;\r\n  name: string;\r\n  password: string;\r\n  usertype: string;\r\n  email: string;\r\n  mobile: string;\r\n  token?: string;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  allUser() {\r\n    // return this.http.get(`${environment.baseUrl}/sellerlist`, httpOptions);\r\n  }\r\n\r\n  getUserInfo(id: string) {\r\n    return {\r\n      id: '1',\r\n      username:'Seller001',\r\n      usertype: 'User',\r\n      email: 'testtest@cn.ibm.com',\r\n      mobile: '17700998899'\r\n    };\r\n  }\r\n\r\n  signup(value: any) {\r\n    return this.http.post(`${environment.baseUrl}/signup`, JSON.stringify(value), httpOptions);\r\n  }\r\n\r\n  setUserInfo(value: any) {\r\n    return this.http.post(`${environment.baseUrl}/useraction`, JSON.stringify(value), httpOptions);\r\n  }\r\n\r\n  setUserPwd(value: any) {\r\n    return this.http.post(`${environment.baseUrl}/userpwdaction`, JSON.stringify(value), httpOptions);\r\n  }\r\n}\r\n\r\n\r\n","import { UserService } from './../../user';\nimport { Component, OnInit, Input } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport { DictsinfoService } from './../../dictsinfo.service';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\n\ninterface Alert {\n  type: string;\n  message: string;\n}\n\nconst ALERTS: Alert[] = [];\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\n\nexport class SignupComponent implements OnInit {\n\n  alerts : Alert[];\n\n  @Input() searchname: any;\n  @Input() searchdate: any;\n\n  constructor(private routeInfo: ActivatedRoute, private router:Router, private userservice: UserService, public dictsinfo: DictsinfoService) {\n    this.reset();\n  }\n\n  usertype: any;\n\n  ngOnInit(): void {\n    this.usertype = this.dictsinfo.getUserType();\n  }\n\n  ngSignup(value: any) {\n    if (this.validInput(value)) {\n      this.userservice.signup(value).subscribe(\n        data => {\n          console.log(JSON.stringify(data));\n          const info: any = data;\n          if (200 === info.code) {\n              console.log('signup successful,redirect page...');\n              this.router.navigate(['/dashboad']);\n          } else {\n            console.log('signup failing.');\n            this.alerts.push({type : 'danger', message: 'please contact administrators!'});\n          }\n        }\n      );\n    }\n  }\n\n  reset(): void {\n    this.alerts = Array.from(ALERTS);\n  }\n\n  close(alert: Alert): void {\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\n  }\n\n  validInput(value: any): boolean {\n    if (!value.username) {\n      this.alerts.push({type : 'danger', message: 'username required!'});\n      return false;\n    }\n\n    if (!value.password) {\n      this.alerts.push({type : 'danger', message: 'password required!'});\n      return false;\n    }\n\n    if (!value.confirmpwd) {\n      this.alerts.push({type : 'danger', message: 'confirm password required!'});\n      return false;\n    }\n\n    if (value.confirmpwd !== value.password) {\n      this.alerts.push({type : 'danger', message: 'input password is different!'});\n      return false;\n    }\n\n    return true;\n  }\n}\n\n","<div class=\"container\" ngController=\"mySignup\">\n  <div class=\"row\">\n      <div class=\"col-sm-12\">\n          <h3>Signup</h3>\n          <p *ngFor=\"let alert of alerts\">\n            <ngb-alert [type]=\"alert.type\" (close)=\"close(alert)\">{{ alert.message }}</ngb-alert>\n          </p>\n          <form class=\"form-horizontal\" #myForm=\"ngForm\" (ngSubmit)=\"ngSignup(myForm.value)\" novalidate>\n              <div class=\"form-group\">\n                  <label class=\"col-sm-4 control-label\">User Name</label>\n                  <div class=\"col-sm-8\">\n                      <input type=\"text\" class=\"form-control\" ngModel id=\"username\" name=\"username\" placeholder=\"type user name\"  required>\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                  <label class=\"col-sm-4 control-label\">Password</label>\n                  <div class=\"col-sm-8\">\n                      <input type=\"password\" ngModel class=\"form-control\" name=\"password\" placeholder=\"type password\" required>\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                  <label class=\"col-sm-4 control-label\">Confirm Password</label>\n                  <div class=\"col-sm-8\">\n                      <input type=\"password\" ngModel class=\"form-control\" name=\"confirmpwd\" placeholder=\"type confirm password\" required>\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                  <label class=\"col-sm-4 control-label\">User Type</label>\n                  <div class=\"col-sm-8\">\n                      <select class=\"form-control\" ngModel id=\"usertype\" name=\"usertype\">\n                        <option *ngFor=\"let utype of usertype\" [value]=\"utype\">{{utype}}</option>\n                      </select>\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                  <label class=\"col-sm-4 control-label\">Email</label>\n                  <div class=\"col-sm-8\">\n                      <input type=\"text\" ngModel name=\"email\" class=\"form-control\" placeholder=\"type e-mail\">\n                  </div>\n              </div>\n              <div class=\"form-group\">\n                  <label class=\"col-sm-4 control-label\">Mobile</label>\n                  <div class=\"col-sm-8\">\n                      <input type=\"text\" ngModel name=\"mobile\" class=\"form-control\" placeholder=\"type mobile\">\n                  </div>\n              </div>\n              <div class=\"btn-toolbar\" role=\"toolbar\">\n                  <div class=\"col-sm-offset-4 col-sm-8\">\n                      <div class=\"btn-group\">\n                          <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n                          <button type=\"reset\" class=\"btn btn-secondary\">Reset</button>\n                      </div>\n                  </div>\n              </div>\n          </form>\n          <div class=\"col-sm-12\">\n              <p>&nbsp;</p>\n              <p>send confirm email if email is not exists[POP3]</p>\n              <p>redirect login page if exists</p>\n          </div>\n      </div>\n  </div>\n</div>\n","/*\n * @Author: your name\n * @Date: 2020-04-22 14:05:22\n * @LastEditTime: 2020-04-24 13:57:05\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\user\\user-password\\user-password.component.ts\n */\nimport { Component, OnInit } from '@angular/core';\nimport { UserService } from './../../user';\nimport { ActivatedRoute, Router } from '@angular/router';\n\ninterface Alert {\n  type: string;\n  message: string;\n}\n\nconst ALERTS: Alert[] = [];\n\n@Component({\n  selector: 'app-user-password',\n  templateUrl: './user-password.component.html',\n  styleUrls: ['./user-password.component.css']\n})\nexport class UserPasswordComponent implements OnInit {\n  alerts : Alert[];\n  userInfo: any;\n\n  constructor(private routeInfo: ActivatedRoute, private router:Router, public userservice: UserService) {\n    this.reset();\n  }\n\n  ngOnInit(): void {\n    this.userInfo = {\n      userid: '1',\n      username: 'seller001'\n    };\n  }\n\n  updateUserPwd(value: any) {\n    if (this.validInput(value)) {\n      this.userservice.setUserPwd(value).subscribe(\n        data => {\n          console.log(JSON.stringify(data));\n          const info: any = data;\n          if (200 === info.code) {\n              console.log('login successful,redirect page...');\n              this.router.navigate(['/sellerlist']);\n          } else {\n            console.log('login failing.');\n            this.alerts.push({type : 'danger', message: 'username or password error!'});\n          }\n        }\n      );\n    }\n  }\n\n  reset(): void {\n    this.alerts = Array.from(ALERTS);\n  }\n\n  close(alert: Alert): void {\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\n  }\n\n  validInput(value: any): boolean {\n    if (!value.password) {\n      this.alerts.push({type : 'danger', message: 'password required!'});\n      return false;\n    }\n\n    if (!value.cfmpassword) {\n      this.alerts.push({type : 'danger', message: 'cfmpassword required!'});\n      return false;\n    }\n\n    if (value.password !== value.cfmpassword) {\n      this.alerts.push({type : 'danger', message: 'password is different cfmpassword !'});\n      return false;\n    }\n\n    return true;\n  }\n\n}\n","<!--\n * @Author: your name\n * @Date: 2020-04-22 14:05:22\n * @LastEditTime: 2020-04-24 13:55:03\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\user\\user-password\\user-password.component.html\n -->\n<div class=\"col-sm-12\" ngController=\"myUser\">\n  <h3>Change Password</h3>\n  <p *ngFor=\"let alert of alerts\">\n    <ngb-alert [type]=\"alert.type\" (close)=\"close(alert)\">{{ alert.message }}</ngb-alert>\n  </p>\n  <form class=\"form-horizontal\" #myForm=\"ngForm\" (ngSubmit)=\"updateUserPwd(myForm.value)\" novalidate>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">User Name</label>\n          <div class=\"col-sm-8\">\n              <input type=\"hidden\" ngModel id=\"userid\" name=\"userid\" [(ngModel)]=\"userInfo.userid\">\n              <input type=\"text\" ngModel id=\"username\" name=\"username\" class=\"form-control\" [(ngModel)]=\"userInfo.username\" disabled>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Password</label>\n          <div class=\"col-sm-8\">\n              <input type=\"password\" ngModel id=\"password\" name=\"password\" class=\"form-control\" placeholder=\"type password\" required>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Confirm Password</label>\n          <div class=\"col-sm-8\">\n              <input type=\"password\" class=\"form-control\" ngModel id=\"cfmpassword\" name=\"cfmpassword\" placeholder=\"type password\" required>\n          </div>\n      </div>\n      <div class=\"btn-toolbar\" role=\"toolbar\">\n          <div class=\"col-sm-offset-4 col-sm-8\">\n              <div class=\"btn-group\">\n                  <button type=\"submit\" class=\"btn btn-primary\">Change Password</button>\n              </div>\n          </div>\n      </div>\n  </form>\n</div>\n","/*\n * @Author: your name\n * @Date: 2020-04-21 17:50:13\n * @LastEditTime: 2020-04-24 13:33:54\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\user\\user-profile\\user-profile.component.ts\n */\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { DictsinfoService } from './../../dictsinfo.service';\nimport { UserService } from './../../user';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\n\ninterface Alert {\n  type: string;\n  message: string;\n}\n\nconst ALERTS: Alert[] = [];\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit {\n  alerts : Alert[];\n\n  constructor(private routeInfo: ActivatedRoute, private router:Router, public userservice: UserService, public dictinfo: DictsinfoService) {\n    this.reset();\n   }\n\n  userid: any;\n  userInfo: any;\n  usertype: any;\n\n  ngOnInit(): void {\n    this.usertype = this.dictinfo.getUserType();\n    this.userid = this.routeInfo.snapshot.params['id'];\n    this.userInfo = this.userservice.getUserInfo(this.userid);\n  }\n\n  updateUserProfile(value: any) {\n    if (this.validInput(value)) {\n      this.userservice.setUserInfo(value).subscribe(\n        data => {\n          console.log(JSON.stringify(data));\n          const info: any = data;\n          if (200 === info.code) {\n              console.log('login successful,redirect page...');\n              this.router.navigate(['/sellerlist']);\n          } else {\n            console.log('login failing.');\n            this.alerts.push({type : 'danger', message: 'username or password error!'});\n          }\n        }\n      );\n    }\n  }\n\n  reset(): void {\n    this.alerts = Array.from(ALERTS);\n  }\n\n  close(alert: Alert): void {\n    this.alerts.splice(this.alerts.indexOf(alert), 1);\n  }\n\n  validInput(value: any): boolean {\n    if (!value.username) {\n      this.alerts.push({type : 'danger', message: 'username required!'});\n      return false;\n    }\n\n    return true;\n  }\n\n}\n","<!--\n * @Author: your name\n * @Date: 2020-04-21 17:50:13\n * @LastEditTime: 2020-04-24 13:29:34\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\user\\user-profile\\user-profile.component.html\n -->\n<div class=\"col-sm-12\" ngController=\"myUser\">\n    <span><a href [routerLink]=\"['/changepwd', userid]\">change user password</a></span>\n  <h3>User Profile</h3>\n  <p *ngFor=\"let alert of alerts\">\n    <ngb-alert [type]=\"alert.type\" (close)=\"close(alert)\">{{ alert.message }}</ngb-alert>\n  </p>\n  <form class=\"form-horizontal\" #myForm=\"ngForm\" (ngSubmit)=\"updateUserProfile(myForm.value)\" novalidate>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">User Name</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" ngModel id=\"username\" name=\"username\" class=\"form-control\" placeholder=\"type user name\" [(ngModel)]=\"userInfo.username\" required>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">User Type</label>\n          <div class=\"col-sm-8\">\n            <select ngModel class=\"form-control\" [(ngModel)]=\"userInfo.usertype\" id=\"usertype\" name=\"usertype\">\n              <option *ngFor=\"let utype of usertype\" [value]=\"utype\" [selected]=\"utype===userInfo.usertype\">{{utype}}</option>\n            </select>\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Email</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" ngModel class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"type e-mail\" [(ngModel)]=\"userInfo.email\">\n          </div>\n      </div>\n      <div class=\"form-group\">\n          <label class=\"col-sm-4 control-label\">Mobile</label>\n          <div class=\"col-sm-8\">\n              <input type=\"text\" ngModel class=\"form-control\" id=\"mobile\" name=\"mobile\" placeholder=\"type mobile\" [(ngModel)]=\"userInfo.mobile\">\n          </div>\n      </div>\n      <div class=\"btn-toolbar\" role=\"toolbar\">\n          <div class=\"col-sm-offset-4 col-sm-8\">\n              <div class=\"btn-group\">\n                  <button type=\"submit\" class=\"btn btn-primary\">Save</button>\n                  <button type=\"reset\" class=\"btn btn-secondary\">Reset</button>\n              </div>\n          </div>\n      </div>\n  </form>\n</div>\n","/*\n * @Author: your name\n * @Date: 2020-04-17 17:46:37\n * @LastEditTime: 2020-04-21 20:07:50\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\user\\user.component.ts\n */\nimport { Component, OnInit, Input } from '@angular/core';\nimport { UserService } from './../user';\n\ninterface SellerInfo {\n  id: string;\n  name: string;\n  usertype: string;\n  email: string;\n  mobile: string;\n}\n\nconst GUEST: SellerInfo[] = [{\n  id: '1',\n  name: 'seller001',\n  usertype: 'seller',\n  email: 'test1@cn.ibm.com',\n  mobile: '13900009999'\n}, {\n  id: '2',\n  name: 'seller002',\n  usertype: 'seller',\n  email: 'test2@cn.ibm.com',\n  mobile: '13900008888'\n}\n];\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  constructor(private userservice: UserService) { }\n\n  users: SellerInfo[];\n\n  ngOnInit(): void {\n    this.users = GUEST\n  }\n\n}\n","<!--\n * @Author: your name\n * @Date: 2020-04-17 17:46:37\n * @LastEditTime: 2020-04-22 14:19:23\n * @LastEditors: Please set LastEditors\n * @Description: In User Settings Edit\n * @FilePath: \\ng-bootstrap\\src\\app\\user\\user.component.html\n -->\n<div class=\"col-sm-12\">\n  <h3>Seller List</h3>\n  <table class=\"table table-striped table-bordered table-hover table-condensed\">\n      <thead>\n      <tr>\n          <th>User name</th>\n          <th>User Type</th>\n          <th>E-mail</th>\n          <th>Mobile</th>\n          <th>operation</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr>\n      <tr *ngFor=\"let user of users\" >\n        <td>{{ user.name }}</td>\n        <td>{{ user.usertype }}</td>\n        <td>{{ user.email }}</td>\n        <td>{{ user.mobile }}</td>\n        <td><a [routerLink]=\"['/sellerprofile', user.id]\">View Seller</a></td>\n    </tr>\n      </tbody>\n  </table>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl:  'http://localhost:8888'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}